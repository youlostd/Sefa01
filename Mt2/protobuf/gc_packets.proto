syntax = "proto3";

package network;

import "data.proto";
import "data_item.proto";
import "data_player.proto";
import "data_pet.proto";

/*********************************************************\
 ** General/Login Packets
\*********************************************************/

message GCSetVerifyKeyPacket {
  uint32 verify_key = 1;
}

message GCLoginFailurePacket {
  bytes status = 1;
  int32 data = 2;
}

message GCCreateFailurePacket {
  uint32 type = 1;
}

message GCDeleteSuccessPacket {
  uint32 account_index = 1;
}

message GCPlayerCreateSuccessPacket {
  uint32 account_index = 1;
  TSimplePlayer player = 2;
}

message GCEmpirePacket {
  uint32 empire = 1;
}

message GCLoginSuccessPacket {
  repeated TSimplePlayer players = 1;
  uint32 handle = 2;
  uint32 random_key = 3;
}

message GCAuthSuccessPacket {
  uint32 login_key = 1;
  bool result = 2;
}

message GCAuthSuccessOpenIDPacket {
  uint32 login_key = 1;
  bool result = 2;
  bytes login = 3;
}

message GCChangeNamePacket {
  uint32 pid = 1;
  bytes name = 2;
}

message GCHybridCryptSDBPacket {
  bytes data_stream = 1;
}

message GCHybridCryptKeysPacket {
  bytes data_stream = 1;
}

message GCRespondChannelStatusPacket {
  repeated TChannelStatus states = 1;
  bool success = 2;
}

message GCPhasePacket {
  uint32 phase = 1;
}

message GCHandshakePacket {
  uint32 handshake = 1;
  uint32 time = 2;
  int32 delta = 3;
  uint32 crypt_key = 4;
}

message GCKeyAgreementPacket {
  bytes data = 1;
  uint32 agreed_length = 2;
}

message GCXTrapCS1RequestPacket {
  bytes data = 1;
}

message GCPanamaPackPacket {
  bytes pack_name = 1;
  bytes abIV = 2;
}

message GCLoginVersionAnswerPacket {
  bool answer = 1;
}

/*********************************************************\
 ** Game Packets
\*********************************************************/

message GCTimePacket {
  uint32 time = 1;
  uint32 random = 2;
  bool combatzone = 3;
  uint32 channel = 4;
  uint32 test_server = 5;
  uint32 map_index = 6;
  bool coins = 7;
}

message GCChannelPacket {
  uint32 channel = 1;
}

message GCWhisperPacket {
  uint32 type = 1;
  int32 locale = 2;
  bytes name_from = 3;
  bytes message = 4;
}

message GCChatPacket {
  uint32 type = 1;
  uint32 id = 2;
  bytes message = 3;
  uint32 empire = 4;
}

message GCMovePacket {
  uint32 func = 1;
  uint32 arg = 2;
  uint32 rot = 3;
  uint32 vid = 4;

  int32 x = 5;
  int32 y = 6;
  
  uint32 time = 7;
  uint32 duration = 8;
}

message GCSyncPositionPacket {
 repeated SyncPositionElement elements = 1;
}

message GCFlyTargetingPacket {
  uint32 shooter_vid = 1;
  uint32 target_vid = 2;
  int32 x = 3;
  int32 y = 4;
}

message GCAddFlyTargetingPacket {
  uint32 shooter_vid = 1;
  uint32 target_vid = 2;
  int32 x = 3;
  int32 y = 4;
}

message GCTargetPacket {
  uint32 vid = 1;
  int32 cur_hp = 2;
  int32 max_hp = 3;
  uint32 hppercent = 4;
  uint32 element = 5;
}

message GCTargetMonsterInfoPacket {
  uint32 race_num = 1;
  repeated TTargetMonsterDropInfoTable drops = 2;
}

message GCPlayerOnlineInformationPacket {
  bytes player_name = 1;
  int32 language_id = 2;
}

message GCUpdateCharacterScalePacket {
  uint32 vid = 1;
  float scale = 2;
}

message GCMaintenanceInfoPacket {
  uint32 remaining_time = 1;
  uint32 duration = 2;
  bytes cause = 3;
}

message GCObserverAddPacket {
  uint32 vid = 1;
  int32 x = 2;
  int32 y = 3;
}

message GCObserverRemovePacket {
  uint32 vid = 1;
}

message GCObserverMovePacket {
  uint32 vid = 1;
  int32 x = 2;
  int32 y = 3;
}

message GCSafeboxSizePacket {
  uint32 size = 1;
}

message GCSafeboxMoneyChangePacket {
  uint32 money = 1;
}

message GCWarpPacket {
  int32 x = 1;
  int32 y = 2;
  int32 addr = 3;
  uint32 port = 4;
}

message GCPVPPacket {
  uint32 vid_src = 1;
  uint32 vid_dst = 2;
  uint32 mode = 3;
}

message GCDuelStartPacket {
  repeated uint32 vids = 1;
}

message GCOwnershipPacket {
  uint32 owner_vid = 1;
  uint32 victim_vid = 2;
}

message GCPositionPacket {
  uint32 vid = 1;
  uint32 position = 2;
}

message GCStunPacket {
  uint32 vid = 1;
}

message GCDeadPacket {
  uint32 vid = 1;
  bool killer_is_pc = 2;
}

message GCPointsPacket {
  repeated int64 points = 1;
  repeated int64 real_points = 2;
}

message GCPointChangePacket {
  uint32 vid = 1;
  uint32 type = 2;
  
  int64 amount = 3;
  int64 value = 4;
}

message GCRealPointSetPacket {
  uint32 type = 1;
  int64 value = 2;
}

message GCQuickslotAddPacket {
  uint32 pos = 1;
  TQuickslot slot = 2;
}

message GCQuickslotDelPacket {
  uint32 pos = 1;
}

message GCQuickslotSwapPacket {
  uint32 pos = 1;
  uint32 change_pos = 2;
}

message GCMotionPacket {
  uint32 vid = 1;
  uint32 victim_vid = 2;
  uint32 motion = 3;
}

message GCDamageInfoPacket {
  uint32 vid = 1;
  uint32 flag = 2;
  int32 damage = 3;
  uint32 target_vid = 4;
}

message GCCreateFlyPacket {
  uint32 type = 1;
  uint32 start_vid = 2;
  uint32 end_vid = 3;
}

message GCDungeonDestinationPositionPacket {
  uint32 x = 1;
  uint32 y = 2;
}

message GCSkillLevelPacket {
  repeated TPlayerSkill levels = 1;
}

message GCMessengerListPacket {
  message Entry {
    uint32 connected = 1;
    bytes name = 2;
  }
  
  repeated Entry players = 1;
}

message GCMessengerBlockListPacket {
  message Entry {
    uint32 connected = 1;
    bytes name = 2;
  }
  
  repeated Entry players = 1;
}

message GCMessengerLoginPacket {
  bytes name = 1;
}

message GCMessengerLogoutPacket {
  bytes name = 1;
}

message GCMessengerBlockLoginPacket {
  bytes name = 1;
}

message GCMessengerBlockLogoutPacket {
  bytes name = 1;
}

message GCMessengerMobilePacket {
  bytes name = 1;
  uint32 state = 2;
}

message GCWalkModePacket {
  uint32 vid = 1;
  uint32 mode = 2;
}

message GCChangeSkillGroupPacket {
  uint32 skill_group = 1;
}

message GCRefineInformationPacket {
  TItemPos pos = 1;
  uint32 type = 2;
  uint32 src_vnum = 3;
  uint32 result_vnum = 4;
  TRefineTable refine_table = 5;
  bool can_fast_refine = 6;
  uint64 cost = 7;
  uint32 prob = 8;
}

message GCSpecialEffectPacket {
  uint32 type = 1;
  uint32 vid = 2;
}

message GCNPCListPacket {
  message Position {
    uint32 type = 1;
	bytes name = 2;
	int32 x = 3;
	int32 y = 4;
	uint32 race = 5;
  }
  
  repeated Position positions = 1;
}

message GCViewEquipPacket {
  uint32 vid = 1;
  repeated TItemData equips = 2;
}

message GCLandListPacket {
  repeated TBuildingLand lands = 1;
}

message GCTargetCreatePacket {
  int32 id = 1;
  bytes name = 2;
  uint32 vid = 3;
  uint32 type = 4;
}

message GCTargetUpdatePacket {
  int32 id = 1;
  int32 x = 2;
  int32 y = 3;
}

message GCTargetDeletePacket {
  int32 id = 1;
}

message GCAffectAddPacket {
  TPacketAffectElement elem = 1;
}

message GCAffectRemovePacket {
  uint32 type = 1;
  uint32 apply_on = 2;
  int32 apply_value = 3;
  uint32 flag = 4;
}

message GCMallOpenPacket {
  uint32 size = 1;
}

message GCLoverInfoPacket {
  bytes name = 1;
  uint32 love_point = 2;
}

message GCLoverPointUpdatePacket {
  uint32 love_point = 1;
}

message GCDigMotionPacket {
  uint32 vid = 1;
  uint32 target_vid = 2;
  uint32 count = 3;
}

message GCSpecificEffectPacket {
  uint32 vid = 1;
  bytes effect_file = 2;
}

message GCDragonSoulRefinePacket {
  uint32 sub_type = 1;
  TItemPos cell = 2;
}

message GCTeamlerStatusPacket {
  bytes name = 1;
  bool is_online = 2;
}

message GCTeamlerShowPacket {
  bool is_show = 1;
}

message GCPartyPositionPacket {
  uint32 pid = 1;
  uint32 x = 2;
  uint32 y = 3;
}

message GCWikiPacket {
  uint64 ret_id = 1;
  uint32 vnum = 2;
  TWikiInfoTable wiki_info = 3;
  repeated TWikiItemOriginInfo origin_infos = 4;
}

message GCWikiMobPacket {
  uint64 ret_id = 1;
  uint32 vnum = 2;
  repeated uint32 mobs = 3;
}

message GCSendCombatZonePacket {
  uint32 sub_header = 1;
  bool is_running = 2;
  repeated uint32 data_infos = 3;
  repeated uint32 data_days = 4;
}

message GCCombatZoneRankingDataPacket {
  repeated TCombatZoneRankingPlayer data = 1;
}

message GCEventRequestPacket {
  uint32 event_index = 1;
  bytes name = 2;
  bytes desc = 3;
}

message GCEventCancelPacket {
  uint32 event_index = 1;
}

message GCEventEmpireWarLoadPacket {
  int32 time_left = 1;
  repeated int32 kills = 2;
  repeated int32 deaths = 3;
}

message GCEventEmpireWarUpdatePacket {
  uint32 empire = 1;
  uint32 kills = 2;
  uint32 deaths = 3;
}

message GCAttrtreeLevelPacket {
  uint32 id = 1;
  uint32 level = 2;
}

message GCAttrtreeRefinePacket {
  uint32 pos = 1;
  TRefineTable refine_table = 2;
}

message GCRunePacket {
  uint32 vnum = 1;
}

message GCRuneRefinePacket {
  uint32 next_point = 1;
  TRefineTable refine_table = 2;
}

message GCRunePagePacket {
  TRunePageData data = 1;
}

message GCRuneLevelupPacket {
  uint32 pos = 1;
  TRefineTable refine_table = 2;
}

message GCEquipmentPageLoadPacket {
  repeated TEquipmentPageInfo pages = 1;
  uint32 selected_index = 2;
}

message GCDmgMeterPacket {
  int32 dmg = 1;
  int32 vid = 2;
}

message GCSkillMotionPacket {
  uint32 vid = 1;
  int32 x = 2;
  int32 y = 3;
  int32 rotation = 4;
  uint32 time = 5;
  uint32 skill_vnum = 6;
  uint32 skill_level = 7;
  uint32 skill_grade = 8;
}

message GCFakeBuffSkillPacket {
  uint32 skill_vnum = 1;
  uint32 level = 2;
}

message GCCBTItemSetPacket {
  TItemData data = 1;
  uint32 cbt_pos = 2;
}

message GCSoulRefineInfoPacket {
  uint32 vnum = 1;
  uint32 apply_type = 2;
  uint32 type = 3;
  repeated int32 apply_values = 4;
  TRefineTable refine = 5;
}

message GCPVPTeamPacket {
  uint32 vid = 1;
  sint32 team = 2;
}

message GCInventoryMaxNumPacket {
  uint32 inv_type = 1;
  uint32 max_num = 2;
}

message GCAttributesToClientPacket {
  message Attribute {
    uint32 type = 1;
	int32 value = 2;
  }

  uint32 item_type = 1;
  sint32 item_sub_type = 2;
  repeated Attribute attrs = 3;
}

message GCHorseRefineInfoPacket {
  uint32 refine_index = 1;
  uint32 current_level = 2;
  TRefineTable refine = 3;
}

message GCHorseRefineResultPacket {
  bool success = 1;
}

message GCGayaShopOpenPacket {
  repeated TGayaShopData datas = 1;
}

message GCBattlepassDataPacket {
  uint32 index = 1;
  TBattlepassData data = 2;
}

message GCCrystalRefinePacket {
  TItemPos crystal_cell = 1;
  TItemPos scroll_cell = 2;
  uint32 next_clarity_type = 3;
  uint32 next_clarity_level = 4;
  repeated TItemAttribute next_attributes = 5;
  uint32 required_fragments = 6;
}

message GCCrystalUsingSlotPacket {
  TItemPos cell = 1;
  bool active = 2;
}

/*********************************************************\
 ** Game AUCTION Packets
\*********************************************************/

message GCAuctionOwnedGoldPacket {
  uint64 gold = 1;
}

message GCAuctionOwnedItemPacket {
  TShopItemTable item = 1;
}

message GCAuctionSearchResultPacket {
  sint32 page = 1;
  sint32 max_page = 2;
  repeated TShopItemTable items = 3;
}

message GCAuctionMessagePacket {
  string message = 1;
}

message GCAuctionShopOwnedPacket {
  bool owned = 1;
}

message GCAuctionShopPacket {
  string name = 1;
  uint32 timeout = 2;
  uint64 gold = 3;
  repeated TItemData items = 4;
}

message GCAuctionShopGoldPacket {
  uint64 gold = 1;
}

message GCAuctionShopTimeoutPacket {
  uint32 timeout = 1;
}

message GCAuctionShopGuestOpenPacket {
  string name = 1;
  repeated TItemData items = 2;
}

message GCAuctionShopGuestUpdatePacket {
  TItemData item = 1;
}

message GCAuctionShopHistoryPacket {
  repeated TAuctionShopHistoryElement elems = 1;
}

message GCAuctionAveragePricePacket {
  uint32 requestor = 1;
  uint64 price = 2;
}

/*********************************************************\
 ** Game CHARACTER Packets
\*********************************************************/

message GCMainCharacterPacket {
  uint32 vid = 1;
  uint32 race_num = 2;
  bytes chr_name = 3;
  bytes bgm_name = 4;
  float bgm_vol = 5;
  int32 x = 6;
  int32 y = 7;
  int32 z = 8;
  uint32 empire = 9;
  uint32 skill_group = 10;
}

message GCCharacterAddPacket {
  message AffectColor {
    uint32 flag = 1;
    uint32 color = 2;
  }

  uint32 vid = 1;
  uint32 level = 2;
  uint32 ai_flag = 3;

  float angle = 4;
  int32 x = 5;
  int32 y = 6;
  int32 z = 7;
  
  uint32 type = 8;
  uint32 race_num = 9;
  uint32 moving_speed = 10;
  uint32 attack_speed = 11;
  
  uint32 state_flag = 12;
  repeated uint32 affect_flags = 13;
  repeated AffectColor affect_colors = 14;
  repeated uint32 toggle_shining_flags = 15;
}

message GCCharacterAdditionalInfoPacket {
  uint32 vid = 1;
  bytes name = 2;
  repeated uint32 parts = 3;
  bool acce_sparkle = 4;
  uint32 empire = 5;
  uint32 guild_id = 6;
  uint32 level = 7;
  sint32 alignment = 8;
  uint32 pk_mode = 9;
  uint32 mount_vnum = 10;
  int32 locale = 11;
  sint32 pvp_team = 12;
  uint32 combat_zone_rank = 13;
  repeated uint32 skill_colors = 14;
  float mob_scale = 15;
}

message GCCharacterUpdatePacket {
  uint32 vid = 1;
  repeated uint32 parts = 2;
  bool acce_sparkle = 3;
  uint32 moving_speed = 4;
  uint32 attack_speed = 5;
  uint32 state_flag = 6;
  repeated uint32 affect_flags = 7;
  repeated GCCharacterAddPacket.AffectColor affect_colors = 8;
  repeated uint32 toggle_shining_flags = 9;
  uint32 guild_id = 10;
  sint32 alignment = 11;
  uint32 pk_mode = 12;
  uint32 mount_vnum = 13;
  uint32 combat_zone_points = 14;
  repeated uint32 skill_colors = 15;
}

message GCCharacterShiningPacket {
  uint32 vid = 1;
  repeated uint32 shinings = 2;
}

message GCCharacterDeletePacket {
  uint32 vid = 1;
}

/*********************************************************\
 ** Game FISHING Packets
\*********************************************************/

message GCFishingStartPacket {
  uint32 vid = 1;
  uint32 dir = 2;
}

message GCFishingStopPacket {
  uint32 vid = 1;
}

message GCFishingReactPacket {
  uint32 vid = 1;
}

message GCFishingSuccessPacket {
  uint32 vid = 1;
}

message GCFishingFailPacket {
  uint32 vid = 1;
}

message GCFishingFishInfoPacket {
  uint32 info = 1;
}

/*********************************************************\
 ** Game ITEM Packets
\*********************************************************/

message GCItemSetPacket {
  TItemData data = 1;
  bool highlight = 2;
}

message GCItemUpdatePacket {
  TItemData data = 1;
}

message GCItemGroundAddPacket {
  int32 x = 1;
  int32 y = 2;
  int32 z = 3;
  
  uint32 vid = 4;
  uint32 vnum = 5;
  uint32 count = 6;
  
  repeated int32 sockets = 7;
  repeated TItemAttribute attributes = 8;
}

message GCItemGroundDeletePacket {
  uint32 vid = 1;
}

message GCItemOwnershipPacket {
  uint32 vid = 1;
  bytes name = 2;
}

/*********************************************************\
 ** Game EXCHANGE Packets
\*********************************************************/

message GCExchangeStartPacket {
  uint32 target_vid = 1;
}

message GCExchangeItemAddPacket {
  uint32 display_pos = 1;
  TItemData data = 2;
  bool is_me = 3;
}

message GCExchangeItemDelPacket {
  uint32 display_pos = 1;
  TItemPos inventory_pos = 2;
  bool is_me = 3;
}

message GCExchangeGoldAddPacket {
  int64 gold = 1;
  bool is_me = 2;
}

message GCExchangeAcceptPacket {
  bool accept = 1;
  bool is_me = 2;
}

/*********************************************************\
 ** Game SHOP Packets
\*********************************************************/

message GCShopStartPacket {
  uint32 vid = 1;
  repeated TShopItemTable items = 2;
}

message GCShopExStartPacket {
  uint32 vid = 1;
  repeated TShopExTabData tabs = 2;
  uint32 points = 3;
  int32 cur_limit = 4;
  int32 max_limit = 5;
}

message GCShopUpdateItemPacket {
  TShopItemTable item = 1;
}

message GCShopSignPacket {
  uint32 vid = 1;
  bytes sign = 2;
  float red = 3;
  float green = 4;
  float blue = 5;
  uint32 style = 6;
}

/*********************************************************\
 ** Game QUEST Packets
\*********************************************************/

message GCQuestInfoPacket {
  uint32 index = 1;
  uint32 flag = 2;
  
  bool is_begin = 3;
  bytes title = 4;
  uint32 cat_id = 5;
  bytes clock_name = 6;
  int32 clock_value = 7;
  bytes counter_name = 8;
  int32 counter_value = 9;
  bytes icon_file_name = 10;
}

message GCScriptPacket {
  uint32 skin = 1;
  bytes script = 2;
}

message GCQuestConfirmPacket {
  bytes message = 1;
  int32 timeout = 2;
  uint32 request_pid = 3;
}

message GCQuestCooldownPacket {
  message Cooldown {
    int32 cooldown = 1;
	int32 done = 2;
	int32 time = 3;
	int32 damage = 4;
	bytes name = 5;
  }
  
  repeated Cooldown datas = 1;
}

/*********************************************************\
 ** Game PET Packets
\*********************************************************/

message GCPetSummonPacket {
  uint32 vid = 1;
  uint32 item_vnum = 2;
  TPetAdvancedTable pet = 3;
  int64 next_exp = 4;
}

message GCPetUpdateExpPacket {
  int64 exp = 1;
}

message GCPetUpdateLevelPacket {
  uint32 level = 1;
  int64 next_exp = 2;
}

message GCPetUpdateSkillPacket {
  uint32 index = 1;
  TPetAdvancedSkillData skill = 2;
}

message GCPetUpdateAttrPacket {
  uint32 index = 1;
  uint32 type = 2;
  uint32 level = 3;
  int32 value = 4;
  bool can_upgrade = 5;
}

message GCPetUpdateSkillpowerPacket {
  uint32 power = 1;
}

message GCPetEvolutionInfoPacket {
  int64 cost = 1;
  uint32 prob = 2;
  repeated TRefineMaterial materials = 3;
}

message GCPetEvolveResultPacket {
  bool result = 1;
}

message GCPetAttrRefineInfoPacket {
  uint32 index = 1;
  int64 cost = 2;
  repeated TRefineMaterial materials = 3;
}

/*********************************************************\
 ** Game PARTY Packets
\*********************************************************/

message GCPartyInvitePacket {
  uint32 leader_vid = 1;
}

message GCPartyAddPacket {
  uint32 pid = 1;
  bytes name =  2;
}

message GCPartyUpdatePacket {
  uint32 pid = 1;
  uint32 role = 2;
  uint32 percent_hp = 3;
  repeated int32 affects = 4;
  bool leader = 5;
}

message GCPartyRemovePacket {
  uint32 pid = 1;
}

message GCPartyLinkPacket {
  uint32 pid = 1;
  uint32 vid = 2;
}

message GCPartyUnlinkPacket {
  uint32 pid = 1;
  uint32 vid = 2;
}

message GCPartyParameterPacket {
  uint32 distribute_mode = 1;
}

/*********************************************************\
 ** Game GUILD Packets
\*********************************************************/

message GCGuildLoginPacket {
  uint32 pid = 1;
}

message GCGuildLogoutPacket {
  uint32 pid = 1;
}

message GCGuildRemovePacket {
  uint32 pid = 1;
}

message GCGuildMemberListPacket {
  repeated TGuildMemberInfo members = 1;
}

message GCGuildGradePacket {
  message GradeData {
    uint32 index = 1;
    bytes name = 2;
    uint32 auth_flag = 3;
  }
  
  repeated GradeData grades = 1;
}

message GCGuildGradeNamePacket {
  uint32 index = 1;
  bytes name = 2;
}

message GCGuildGradeAuthPacket {
  uint32 index = 1;
  uint32 auth_flag = 2;
}

message GCGuildInfoPacket {
  uint32 member_count = 1;
  uint32 max_member_count = 2;
  uint32 guild_id = 3;
  uint32 master_pid = 4;
  uint32 exp = 5;
  uint32 level = 6;
  bytes name = 7;
  uint32 gold = 8;
  bool has_land = 9;
  uint32 guild_point = 10;
  uint32 guild_rank = 11;
  repeated uint32 wins = 12;
  repeated uint32 draws = 13;
  repeated uint32 losses = 14;
}

message GCGuildCommentsPacket {
  message Comment {
    uint32 id = 1;
    bytes name = 2;
    bytes message = 3;
  }
  
  repeated Comment comments = 1;
}

message GCGuildChangeExpPacket {
  uint32 level = 1;
  uint32 exp = 2;
}

message GCGuildChangeMemberGradePacket {
  uint32 pid = 1;
  uint32 grade = 2;
}

message GCGuildSkillInfoPacket {
  uint32 skill_point = 1;
  repeated uint32 skill_levels = 2;
  uint32 guild_point = 3;
  uint32 max_guild_point = 4;
}

message GCGuildChangeMemberGeneralPacket {
  uint32 pid = 1;
  bool flag = 2;
}

message GCGuildInvitePacket {
  uint32 guild_id = 1;
  bytes guild_name = 2;
}

message GCGuildMemberLastPlayedPacket {
  message MemberInfo {
    uint32 pid = 1;
	uint32 timestamp = 2;
  }
  
  repeated MemberInfo members = 1;
}

message GCGuildBattleStatsPacket {
  repeated int32 wins = 1;
  repeated int32 draws = 2;
  repeated int32 losses = 3;
}

message GCGuildWarPacket {
  uint32 guild_self = 1;
  uint32 guild_opponent = 2;
  uint32 type = 3;
  uint32 war_state = 4;
}

message GCGuildNamePacket {
  message NameInfo {
    uint32 guild_id = 1;
    bytes name = 2;
  }
  
  repeated NameInfo names = 1;
}

message GCGuildWarListPacket {
  message WarInfo {
    uint32 src_guild_id = 1;
    uint32 dst_guild_id = 2;
  }
  
  repeated WarInfo wars = 1;
}

message GCGuildWarEndListPacket {
  repeated GCGuildWarListPacket.WarInfo wars = 1;
}

message GCGuildWarPointPacket {
  uint32 gain_guild_id = 1;
  uint32 opponent_guild_id = 2;
  int32 point = 3;
}

message GCGuildMoneyChangePacket {
  uint32 gold = 1;
}

message GCGuildSafeboxOpenPacket {
  uint32 size = 1;
}

message GCGuildSafeboxGoldPacket {
  uint64 gold = 1;
}

message GCGuildSafeboxLoadLogPacket {
  repeated TGuildSafeboxLogTable logs = 1;
}

message GCGuildSafeboxAppendLogPacket {
  TGuildSafeboxLogTable log = 1;
}

message GCGuildLadderListPacket {
  repeated TGuildLadderInfo ladders = 1;
  uint32 page_number = 2;
  uint32 total_pages = 3;
}

message GCGuildLadderSearchResultPacket {
  TGuildLadderInfo ladder = 1;
  uint32 rank = 2;
}

message GCGuildRankAndPointPacket {
  int32 point = 1;
  uint32 rank = 2;
}

/*********************************************************\
 ** Mark Packets
\*********************************************************/

message GCGuildSymbolDataPacket {
  uint32 guild_id = 1;
  bytes image = 2;
}

message GCMarkIDXListPacket {
  message Element {
    uint32 guild_id = 1;
	uint32 mark_id = 2;
  }
  
  repeated Element elems = 1;
}

message GCMarkBlockPacket {
  uint32 image_index = 1;
  uint32 block_count = 2;
  bytes image = 3;
}
