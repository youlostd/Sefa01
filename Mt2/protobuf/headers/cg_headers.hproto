import "cg_packets.proto" as cgps

group CGHeader {
	[comment] = "Client -> Game-Server Header.",

	STATE_CHECKER,
	PONG,
	HANDSHAKE => cgps.CGHandshakePacket,
	KEY_AGREEMENT => cgps.CGKeyAgreementPacket,
	CLIENT_VERSION => cgps.CGClientVersionPacket,

	HACK => cgps.CGHackPacket,
	HS_ACK,
	XTRAP_ACK => cgps.CGXTRAPAckPacket,

	LOGIN_VERSION_CHECK => cgps.CGLoginVersionCheckPacket,
	AUTH_LOGIN => cgps.CGAuthLoginPacket,
	AUTH_OPENID_LOGIN => cgps.CGAuthOpenIDLoginPacket,
	AUTH_PASSPOD_ANSWER => cgps.CGAuthPasspodAnswerPacket,
	LOGIN_BY_KEY => cgps.CGLoginByKeyPacket,

	EMPIRE => cgps.CGEmpirePacket,
	PLAYER_SELECT => cgps.CGPlayerSelectPacket,
	PLAYER_CREATE => cgps.CGPlayerCreatePacket,
	PLAYER_DELETE => cgps.CGPlayerDeletePacket,
	PLAYER_CHANGE_NAME => cgps.CGPlayerChangeNamePacket,
	PLAYER_SELECT_HAIR => cgps.CGPlayerHairSelectPacket,

	SCRIPT_ANSWER => cgps.CGScriptAnswerPacket,
	SCRIPT_BUTTON => cgps.CGScriptButtonPacket,
	SCRIPT_SELECT_ITEM => cgps.CGScriptSelectItemPacket,
	QUEST_INPUT_STRING => cgps.CGQuestInputStringPacket,
	QUEST_CONFIRM => cgps.CGQuestConfirmPacket,
	
	ITEM_USE => cgps.CGItemUsePacket,
	ITEM_USE_TO_ITEM => cgps.CGItemUseToItemPacket,
	ITEM_DROP => cgps.CGItemDropPacket,
	ITEM_DESTROY => cgps.CGItemDestroyPacket,
	ITEM_MOVE => cgps.CGItemMovePacket,
	ITEM_PICKUP => cgps.CGItemPickupPacket,
	
	SAFEBOX_CHECKIN => cgps.CGSafeboxCheckinPacket,
	SAFEBOX_CHECKOUT => cgps.CGSafeboxCheckoutPacket,
	SAFEBOX_ITEM_MOVE => cgps.CGSafeboxItemMovePacket,
	
	ACCE_REFINE_CHECKIN => cgps.CGAcceRefineCheckinPacket,
	ACCE_REFINE_CHECKOUT => cgps.CGAcceRefineCheckoutPacket,
	ACCE_REFINE_ACCEPT => cgps.CGAcceRefineAcceptPacket,
	ACCE_REFINE_CANCEL,
	
	QUICKSLOT_ADD => cgps.CGQuickslotAddPacket,
	QUICKSLOT_DELETE => cgps.CGQuickslotDeletePacket,
	QUICKSLOT_SWAP => cgps.CGQuickslotSwapPacket,
	
	SHOP_BUY => cgps.CGShopBuyPacket,
	SHOP_SELL => cgps.CGShopSellPacket,
	SHOP_END,
	
	EXCHANGE_START => cgps.CGExchangeStartPacket,
	EXCHANGE_ITEM_ADD => cgps.CGExchangeItemAddPacket,
	EXCHANGE_ITEM_DEL => cgps.CGExchangeItemDelPacket,
	EXCHANGE_GOLD_ADD => cgps.CGExchangeGoldAddPacket,
	EXCHANGE_ACCEPT,
	EXCHANGE_CANCEL,
	
	MESSENGER_ADD_BY_VID => cgps.CGMessengerAddByVIDPacket,
	MESSENGER_ADD_BY_NAME => cgps.CGMessengerAddByNamePacket,
	MESSENGER_REMOVE => cgps.CGMessengerRemovePacket,
	MESSENGER_ADD_BLOCK_BY_VID => cgps.CGMessengerAddBlockByVIDPacket,
	MESSENGER_ADD_BLOCK_BY_NAME => cgps.CGMessengerAddBlockByNamePacket,
	MESSENGER_REMOVE_BLOCK => cgps.CGMessengerRemoveBlockPacket,
	
	PARTY_INVITE => cgps.CGPartyInvitePacket,
	PARTY_INVITE_ANSWER => cgps.CGPartyInviteAnswerPacket,
	PARTY_REMOVE => cgps.CGPartyRemovePacket,
	PARTY_SET_STATE => cgps.CGPartySetStatePacket,
	PARTY_USE_SKILL => cgps.CGPartyUseSkillPacket,
	PARTY_PARAMETER => cgps.CGPartyParameterPacket,
	
	GUILD_DEPOSIT_MONEY => cgps.CGGuildDepositMoneyPacket,
	GUILD_WITHDRAW_MONEY => cgps.CGGuildWithdrawMoneyPacket,
	GUILD_ADD_MEMBER => cgps.CGGuildAddMemberPacket,
	GUILD_REMOVE_MEMBER => cgps.CGGuildRemoveMemberPacket,
	GUILD_CHANGE_GRADE_NAME => cgps.CGGuildChangeGradeNamePacket,
	GUILD_CHANGE_GRADE_AUTHORITY => cgps.CGGuildChangeGradeAuthorityPacket,
	GUILD_OFFER_EXP => cgps.CGGuildOfferExpPacket,
	GUILD_CHARGE_GSP => cgps.CGGuildChargeGSPPacket,
	GUILD_POST_COMMENT => cgps.CGGuildPostCommentPacket,
	GUILD_DELETE_COMMENT => cgps.CGGuildDeleteCommentPacket,
	GUILD_REFRESH_COMMENT,
	GUILD_CHANGE_MEMBER_GRADE => cgps.CGGuildChangeMemberGradePacket,
	GUILD_USE_SKILL => cgps.CGGuildUseSkillPacket,
	GUILD_CHANGE_MEMBER_GENERAL => cgps.CGGuildChangeMemberGeneralPacket,
	GUILD_INVITE_ANSWER => cgps.CGGuildInviteAnswerPacket,
	GUILD_ANSWER_MAKE => cgps.CGGuildAnswerMakePacket,
	GUILD_REQUEST_LIST => cgps.CGGuildRequestListPacket,
	GUILD_SEARCH => cgps.CGGuildSearchPacket,
	
	MARK_LOGIN,
	MARK_CRC_LIST => cgps.CGMarkCRCListPacket,
	MARK_IDX_LIST,
	MARK_UPLOAD => cgps.CGMarkUploadPacket,
	GUILD_SYMBOL_UPLOAD => cgps.CGGuildSymbolUploadPacket,
	GUILD_SYMBOL_CRC => cgps.CGGuildSymbolCRCPacket,

	ENTERGAME,
	MOVE => cgps.CGMovePacket,
	CHAT => cgps.CGChatPacket,
	ATTACK => cgps.CGAttackPacket,
	SHOOT => cgps.CGShootPacket,
	WHISPER => cgps.CGWhisperPacket,
	ON_CLICK => cgps.CGOnClickPacket,
	POSITION => cgps.CGPositionPacket,
	NEXT_SKILL_USE => cgps.CGNextSkillUsePacket,
	SYNC_POSITION => cgps.CGSyncPositionPacket,
	FLY_TARGET => cgps.CGFlyTargetPacket,
	ADD_FLY_TARGET => cgps.CGAddFlyTargetPacket,
	USE_SKILL => cgps.CGUseSkillPacket,
	TARGET => cgps.CGTargetPacket,
	TARGET_MONSTER_DROP_INFO => cgps.CGTargetMonsterDropInfoPacket,
	WARP,
	COSTUME_VISIBILITY => cgps.CGCostumeVisibilityPacket,
	FISHING => cgps.CGFishingPacket,
	GIVE_ITEM => cgps.CGGiveItemPacket,
	MYSHOP => cgps.CGMyShopPacket,
	REFINE => cgps.CGRefinePacket,
	PLAYER_LANGUAGE_INFORMATION => cgps.CGPlayerLanguageInformationPacket,
	REPORT => cgps.CGReportPacket,
	DRAGON_SOUL_REFINE => cgps.CGDragonSoulRefinePacket,
	PING_TIMER,
	IPV6_FIX_ENABLE,
	ON_HIT_SPACEBAR,
	ON_QUEST_TRIGGER => cgps.CGOnQuestTriggerPacket,
	ITEM_MULTI_USE => cgps.CGItemMultiUsePacket,
	BOT_REPORT_LOG => cgps.CGBotReportLogPacket,
	FORCED_REWARP => cgps.CGForcedRewarpPacket,
	USE_DETACHMENT_SINGLE => cgps.CGUseDetachmentSinglePacket,
	EVENT_REQUEST_ANSWER => cgps.CGEventRequestAnswerPacket,
	COSTUME_BONUS_TRANSFER => cgps.CGCostumeBonusTransferPacket,
	RUNE_PAGE => cgps.CGRunePagePacket,
	RECV_WIKI => cgps.CGRecvWikiPacket,
	EQUIPMENT_PAGE_ADD => cgps.CGEquipmentPageAddPacket,
	EQUIPMENT_PAGE_DELETE => cgps.CGEquipmentPageDeletePacket,
	EQUIPMENT_PAGE_SELECT => cgps.CGEquipmentPageSelectPacket,
	COMBAT_ZONE_REQUEST_ACTION => cgps.CGCombatZoneRequestActionPacket,
	SET_SKILL_COLOR => cgps.CGSetSkillColorPacket,
	CRYSTAL_REFINE => cgps.CGCrystalRefinePacket,

	GUILD_SAFEBOX_OPEN,
	GUILD_SAFEBOX_CHECKIN => cgps.CGGuildSafeboxCheckinPacket,
	GUILD_SAFEBOX_CHECKOUT => cgps.CGGuildSafeboxCheckoutPacket,
	GUILD_SAFEBOX_ITEM_MOVE => cgps.CGGuildSafeboxItemMovePacket,
	GUILD_SAFEBOX_GIVE_GOLD => cgps.CGGuildSafeboxGiveGoldPacket,
	GUILD_SAFEBOX_GET_GOLD => cgps.CGGuildSafeboxGetGoldPacket,

	AUCTION_INSERT_ITEM => cgps.CGAuctionInsertItemPacket,
	AUCTION_TAKE_ITEM => cgps.CGAuctionTakeItemPacket,
	AUCTION_BUY_ITEM => cgps.CGAuctionBuyItemPacket,
	AUCTION_TAKE_GOLD => cgps.CGAuctionTakeGoldPacket,
	AUCTION_SEARCH_ITEMS => cgps.CGAuctionSearchItemsPacket,
	AUCTION_EXTENDED_SEARCH_ITEMS => cgps.CGAuctionExtendedSearchItemsPacket,
	AUCTION_MARK_SHOP => cgps.CGAuctionMarkShopPacket,
	AUCTION_SHOP_REQUEST_SHOW,
	AUCTION_SHOP_OPEN => cgps.CGAuctionShopOpenPacket,
	AUCTION_SHOP_TAKE_GOLD => cgps.CGAuctionShopTakeGoldPacket,
	AUCTION_SHOP_GUEST_CANCEL,
	AUCTION_SHOP_REQUEST_HISTORY,
	AUCTION_SHOP_RENEW,
	AUCTION_SHOP_CLOSE => cgps.CGAuctionShopClosePacket,
	AUCTION_REQUEST_AVG_PRICE => cgps.CGAuctionRequestAveragePricePacket,
	
	PET_USE_EGG => cgps.CGPetUseEggPacket,
	PET_RESET_SKILL => cgps.CGPetResetSkillPacket,
	PET_EVOLUTION_INFO,
	PET_EVOLVE,
	PET_ATTR_REFINE_INFO => cgps.CGPetAttrRefineInfoPacket,
	PET_ATTR_REFINE => cgps.CGPetAttrRefinePacket,
}
