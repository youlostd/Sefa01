syntax = "proto3";

package network;

import "data.proto";
import "data_player.proto";
import "data_item.proto";

/*********************************************************\
 ** General/Login Packets
\*********************************************************/

message CGHandshakePacket {
  uint32 handshake = 1;
  uint32 time = 2;
  sint32 delta = 3;
  bytes crypt_data = 4;
}

message CGKeyAgreementPacket {
  uint32 header = 1;
  uint32 agreed_length = 2;
  uint32 data_length = 3;
  bytes data = 4;
}

message CGAuthLoginPacket {
  bytes login = 1;
  bytes passwd = 2;
  bytes hwid = 3;
  repeated uint32 client_keys = 4;
  uint32 version = 5;
  uint32 language = 6;
  bytes pc_name = 7;
  bytes user_name = 8;
  bytes	pc_name_real = 9;
  bytes user_name_real = 10;
  bytes hash = 11;
}

message CGAuthOpenIDLoginPacket {
  bytes auth_key = 1;
  repeated uint32 client_keys = 2;
}

message CGAuthPasspodAnswerPacket {
  bytes answer = 1;
}

message CGLoginByKeyPacket {
  bytes login = 1;
  uint32 login_key = 2;
  repeated uint32 client_key = 3;
  uint32 locale = 4;
}

message CGEmpirePacket {
  uint32 empire = 1;
}

message CGPlayerSelectPacket {
  uint32 index = 1;
}

message CGPlayerCreatePacket {
  uint32 index = 1;
  bytes name = 2;
  uint32 job = 3;
  uint32 shape = 4;
  uint32 con = 5;
  uint32 int = 6;
  uint32 str = 7;
  uint32 dex = 8;
}

message CGPlayerChangeNamePacket {
  uint32 index = 1;
  bytes name = 2;
}

message CGPlayerHairSelectPacket {
  uint32 index = 1;
  uint32 hair_vnum = 2;
}

message CGPlayerDeletePacket {
  uint32 index = 1;
  bytes private_code = 2;
}

message CGMarkCRCListPacket {
  uint32 image_index = 1;
  repeated uint32 crclist = 2;
}

message CGMarkUploadPacket {
  uint32 guild_id = 1;
  bytes image = 2;
}

message CGGuildSymbolUploadPacket {
  uint32 guild_id = 1;
  bytes image = 2;
}

message CGGuildSymbolCRCPacket {
  uint32 guild_id = 1;
  uint32 crc = 2;
  uint32 symbol_size = 3;
}

message CGClientVersionPacket {
  bytes filename = 1;
  bytes timestamp = 2;
}

message CGLoginVersionCheckPacket {
  bytes version = 1;
}

message CGXTRAPAckPacket {
  bytes packet_data = 1;
}

message CGHackPacket {
  bytes buf = 1;
}

/*********************************************************\
 ** Game Packets
\*********************************************************/

message CGCostumeVisibilityPacket {
  uint32 type = 1;
  bool visible = 2;
}

message CGChatPacket {
  uint32 type = 1;
  bytes message = 2;
}

message CGAttackPacket {
  uint32 type = 1;
  uint32 vid = 2;
  uint32 crc_magic_cube_proc_piece = 3;
  uint32 crc_magic_cube_file_piece = 4;
  uint32 random = 5;
}

message CGShootPacket {
  uint32 type = 1;
}

message CGWhisperPacket {
  bytes name_to = 1;
  bytes message = 2;
  bool send_offline = 3;
}

message CGOnClickPacket {
  uint32 vid = 1;
}

message CGPositionPacket {
  uint32 position = 1;
}

message CGNextSkillUsePacket {
  uint32 skill_vnum = 1;
}

message CGMovePacket {
  uint32 func = 1;
  uint32 arg = 2;
  uint32 rot = 3;
  uint32 x = 4;
  uint32 y = 5;
  uint32 time = 6;
}

message CGSyncPositionPacket {
  repeated SyncPositionElement elements = 1;
}

message CGFlyTargetPacket {
  uint32 target_vid = 1;
  uint32 x = 2;
  uint32 y = 3;
}

message CGAddFlyTargetPacket {
  uint32 target_vid = 1;
  uint32 x = 2;
  uint32 y = 3;
}

message CGUseSkillPacket {
  uint32 vnum = 1;
  uint32 vid = 2;
}

message CGTargetPacket {
  uint32 vid = 1;
}

message CGTargetMonsterDropInfoPacket {
  uint32 race_num = 1;
}

message CGFishingPacket {
  uint32 dir = 1;
}

message CGGiveItemPacket {
  uint32 target_vid = 1;
  TItemPos cell = 2;
  uint32 item_count = 3;
}

message CGMyShopPacket {
  bytes sign = 1;
  repeated TShopItemTable items = 2;
}

message CGRefinePacket {
  TItemPos cell = 1;
  uint32 type = 2;
  bool fast_refine = 3;
}

message CGPlayerLanguageInformationPacket {
  bytes player_name = 1;
}

message CGReportPacket {
  uint32 key = 1;
}

message CGDragonSoulRefinePacket {
  uint32 sub_type = 1;
  repeated TItemPos item_grid = 2;
}

message CGOnQuestTriggerPacket {
  uint32 index = 1;
  int32 arg = 2;
}

message CGItemMultiUsePacket {
  TItemPos cell = 1;
  uint32 count = 2;
}

message CGBotReportLogPacket {
  bytes type = 1;
  bytes detail = 2;
}

message CGForcedRewarpPacket {
  bytes detail_log = 1;
  int32 checkval = 2;
}

message CGUseDetachmentSinglePacket {
  uint32 cell_detachment = 1;
  uint32 cell_item = 2;
  uint32 slot_index = 3;
}

message CGEventRequestAnswerPacket {
  uint32 event_index = 1;
  bool accept = 2;
}

message CGCostumeBonusTransferPacket {
  uint32 sub_header = 1;
  uint32 pos = 2;
  TItemPos item_cell = 3;
}

message CGRunePagePacket {
  TRunePageData data = 1;
}

message CGRecvWikiPacket {
  uint32 vnum = 1;
  bool is_mob = 2;
  uint64 ret_id = 3;
}

message CGSetSkillColorPacket {
  uint32 skill = 1;
  uint32 col1 = 2;
  uint32 col2 = 3;
  uint32 col3 = 4;
  uint32 col4 = 5;
  uint32 col5 = 6;
}

message CGEquipmentPageAddPacket {
  bytes name = 1;
}

message CGEquipmentPageDeletePacket {
  uint32 index = 1;
}

message CGEquipmentPageSelectPacket {
  uint32 index = 1;
}

message CGCombatZoneRequestActionPacket {
  int32 action = 1;
  int32 value = 2;
}

message CGCrystalRefinePacket {
  TItemPos crystal_cell = 1;
  TItemPos scroll_cell = 2;
}

/*********************************************************\
 ** Game AUCTION Packets
\*********************************************************/

message CGAuctionInsertItemPacket {
  TItemPos cell = 1;
  TItemPos target_cell = 2;
  uint64 price = 3;
}

message CGAuctionTakeItemPacket {
  uint32 item_id = 1;
  uint32 inventory_pos = 2;
}

message CGAuctionBuyItemPacket {
  uint32 item_id = 1;
  uint64 price = 2;
}

message CGAuctionTakeGoldPacket {
  uint64 gold = 1;
}

message CGAuctionSearchItemsPacket {
  uint32 page = 1;
  TDataAuctionSearch options = 2;
}

message CGAuctionExtendedSearchItemsPacket {
  uint32 page = 1;
  TExtendedDataAuctionSearch options = 2;
}

message CGAuctionMarkShopPacket {
  uint32 item_id = 1;
}

message CGAuctionShopOpenPacket {
  bytes name = 1;
  uint32 style = 2;
  uint32 model = 3;

  float color_red = 4;
  float color_green = 5;
  float color_blue = 6;

  uint32 x = 7;
  uint32 y = 8;

  repeated TShopItemTable items = 9;
}

message CGAuctionShopClosePacket {
  bool has_items = 1;
}

message CGAuctionShopTakeGoldPacket {
  uint64 gold = 1;
}

message CGAuctionRequestAveragePricePacket {
  uint32 requestor = 1;
  uint32 vnum = 2;
  uint32 count = 3;
}

/*********************************************************\
 ** Game QUEST Packets
\*********************************************************/

message CGScriptAnswerPacket {
  uint32 answer = 1;
}

message CGScriptButtonPacket {
  uint32 index = 1;
}

message CGScriptSelectItemPacket {
  uint32 selection = 1;
}

message CGQuestInputStringPacket {
  bytes message = 1;
}

message CGQuestConfirmPacket {
  uint32 answer = 1;
  uint32 request_pid = 2;
}

/*********************************************************\
 ** Game ITEM Packets
\*********************************************************/

message CGItemUsePacket {
  TItemPos cell = 1;
  uint32 count = 2;
}

message CGItemUseToItemPacket {
  TItemPos cell = 1;
  TItemPos target_cell = 2;
}

message CGItemDropPacket {
  TItemPos cell = 1;
  uint32 gold = 2;
  uint32 count = 3;
}

message CGItemDestroyPacket {
  TItemPos cell = 1;
  uint32 num = 2;
}

message CGItemMovePacket {
  TItemPos cell = 1;
  TItemPos cell_to = 2;
  uint32 count = 3;
}

message CGItemPickupPacket {
  uint32 vid = 1;
}

/*********************************************************\
 ** Game SAFEBOX Packets
\*********************************************************/

message CGSafeboxCheckinPacket {
  uint32 safebox_pos = 1;
  TItemPos inventory_pos = 2;
}

message CGSafeboxCheckoutPacket {
  uint32 safebox_pos = 1;
  TItemPos inventory_pos = 2;
  bool is_mall = 3;
}

message CGSafeboxItemMovePacket {
  uint32 source_pos = 1;
  uint32 target_pos = 2;
  uint32 count = 3;
}

/*********************************************************\
 ** Game ACCE REFINE Packets
\*********************************************************/

message CGAcceRefineCheckinPacket {
  TItemPos item_cell = 1;
  uint32 acce_pos = 2;
}

message CGAcceRefineCheckoutPacket {
  uint32 acce_pos = 1;
}

message CGAcceRefineAcceptPacket {
  uint32 window_type = 1;
}

/*********************************************************\
 ** Game QUICKSLOT Packets
\*********************************************************/

message CGQuickslotAddPacket {
  uint32 pos = 1;
  TQuickslot slot = 2;
}

message CGQuickslotDeletePacket {
  uint32 pos = 1;
}

message CGQuickslotSwapPacket {
  uint32 pos = 1;
  uint32 change_pos = 2;
}

/*********************************************************\
 ** Game SHOP Packets
\*********************************************************/

message CGShopBuyPacket {
  uint32 pos = 1;
}

message CGShopSellPacket {
  TItemPos cell = 1;
  uint32 count = 2;
}

/*********************************************************\
 ** Game EXCHANGE Packets
\*********************************************************/

message CGExchangeStartPacket {
  uint32 other_vid = 1;
}

message CGExchangeItemAddPacket {
  TItemPos cell = 1;
  uint32 display_pos = 2;
}

message CGExchangeItemDelPacket {
  uint32 display_pos = 1;
}

message CGExchangeGoldAddPacket {
  uint64 gold = 1;
}

/*********************************************************\
 ** Game MESSENGER Packets
\*********************************************************/

message CGMessengerAddByVIDPacket {
  uint32 vid = 1;
}

message CGMessengerAddByNamePacket {
  bytes name = 1;
}

message CGMessengerRemovePacket {
  bytes name = 1;
}

message CGMessengerAddBlockByVIDPacket {
  uint32 vid = 1;
}

message CGMessengerAddBlockByNamePacket {
  bytes name = 1;
}

message CGMessengerRemoveBlockPacket {
  bytes name = 1;
}

/*********************************************************\
 ** Game PARTY Packets
\*********************************************************/

message CGPartyInvitePacket {
  uint32 vid = 1;
}

message CGPartyInviteAnswerPacket {
  uint32 leader_vid = 1;
  bool accept = 2;
}

message CGPartyRemovePacket {
  uint32 pid = 1;
}

message CGPartySetStatePacket {
  uint32 pid = 1;
  uint32 role = 2;
  bool flag = 3;
}

message CGPartyUseSkillPacket {
  uint32 skill_index = 1;
  uint32 vid = 2;
}

message CGPartyParameterPacket {
  uint32 distribute_mode = 1;
}

/*********************************************************\
 ** Game GUILD Packets
\*********************************************************/

message CGGuildDepositMoneyPacket {
  uint32 gold = 1;
}

message CGGuildWithdrawMoneyPacket {
  uint32 gold = 1;
}

message CGGuildAddMemberPacket {
  uint32 vid = 1;
}

message CGGuildRemoveMemberPacket {
  uint32 pid = 1;
}

message CGGuildChangeGradeNamePacket {
  uint32 grade = 1;
  bytes gradename = 2;
}

message CGGuildChangeGradeAuthorityPacket {
  uint32 grade = 1;
  uint32 authority = 2;
}

message CGGuildOfferExpPacket {
  uint32 exp = 1;
}

message CGGuildChargeGSPPacket {
  uint32 amount = 1;
}

message CGGuildPostCommentPacket {
  bytes message = 1;
}

message CGGuildDeleteCommentPacket {
  uint32 comment_id = 1;
}

message CGGuildChangeMemberGradePacket {
  uint32 pid = 1;
  uint32 grade = 2;
}

message CGGuildUseSkillPacket {
  uint32 vnum = 1;
  uint32 pid = 2;
}

message CGGuildChangeMemberGeneralPacket {
  uint32 pid = 1;
  bool is_general = 2;
}

message CGGuildInviteAnswerPacket {
  uint32 guild_id = 1;
  bool accept = 2;
}

message CGGuildAnswerMakePacket {
  bytes guild_name = 1;
}

message CGGuildRequestListPacket {
  uint32 page_number = 1;
  uint32 page_type = 2;
  uint32 empire = 3;
}

message CGGuildSearchPacket {
  bytes search_name = 1;
  uint32 page_type = 2;
  uint32 empire = 3;
}

message CGGuildSafeboxCheckinPacket {
  TItemPos item_pos = 1;
  uint32 safebox_pos = 2;
}

message CGGuildSafeboxCheckoutPacket {
  uint32 safebox_pos = 1;
  TItemPos item_pos = 2;
}

message CGGuildSafeboxItemMovePacket {
  uint32 source_pos = 1;
  uint32 target_pos = 2;
  uint32 count = 3;
}

message CGGuildSafeboxGiveGoldPacket {
  uint64 gold = 1;
}

message CGGuildSafeboxGetGoldPacket {
  uint64 gold = 1;
}

/*********************************************************\
 ** Game PET Packets
\*********************************************************/

message CGPetUseEggPacket {
  TItemPos egg_cell = 1;
  string pet_name = 2;
}

message CGPetResetSkillPacket {
  TItemPos reset_cell = 1;
  uint32 skill_index = 2;
}

message CGPetAttrRefineInfoPacket {
  uint32 index = 1;
}

message CGPetAttrRefinePacket {
  uint32 index = 1;
}
