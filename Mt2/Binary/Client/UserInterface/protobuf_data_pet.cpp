// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_pet.proto

#include "protobuf_data_pet.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace network {
PROTOBUF_CONSTEXPR TPetAdvancedSkillProto::TPetAdvancedSkillProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.value_expr_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.apply_)*/0u
  , /*decltype(_impl_.is_heroic_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TPetAdvancedSkillProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TPetAdvancedSkillProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TPetAdvancedSkillProtoDefaultTypeInternal() {}
  union {
    TPetAdvancedSkillProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TPetAdvancedSkillProtoDefaultTypeInternal _TPetAdvancedSkillProto_default_instance_;
PROTOBUF_CONSTEXPR TPetAdvancedEvolveProto::TPetAdvancedEvolveProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.level_)*/0u
  , /*decltype(_impl_.refine_id_)*/0u
  , /*decltype(_impl_.scale_)*/0
  , /*decltype(_impl_.normal_skill_count_)*/0u
  , /*decltype(_impl_.heroic_skill_count_)*/0u
  , /*decltype(_impl_.skillpower_)*/0u
  , /*decltype(_impl_.skillpower_rerollable_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TPetAdvancedEvolveProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TPetAdvancedEvolveProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TPetAdvancedEvolveProtoDefaultTypeInternal() {}
  union {
    TPetAdvancedEvolveProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TPetAdvancedEvolveProtoDefaultTypeInternal _TPetAdvancedEvolveProto_default_instance_;
PROTOBUF_CONSTEXPR TPetAdvancedAttrProto::TPetAdvancedAttrProto(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.apply_level_)*/0u
  , /*decltype(_impl_.apply_type_)*/0u
  , /*decltype(_impl_.value_)*/0
  , /*decltype(_impl_.refine_id_)*/0u
  , /*decltype(_impl_.required_pet_level_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TPetAdvancedAttrProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TPetAdvancedAttrProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TPetAdvancedAttrProtoDefaultTypeInternal() {}
  union {
    TPetAdvancedAttrProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TPetAdvancedAttrProtoDefaultTypeInternal _TPetAdvancedAttrProto_default_instance_;
PROTOBUF_CONSTEXPR TPetAdvancedSkillData::TPetAdvancedSkillData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.vnum_)*/0u
  , /*decltype(_impl_.level_)*/0u
  , /*decltype(_impl_.changed_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TPetAdvancedSkillDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TPetAdvancedSkillDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TPetAdvancedSkillDataDefaultTypeInternal() {}
  union {
    TPetAdvancedSkillData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TPetAdvancedSkillDataDefaultTypeInternal _TPetAdvancedSkillData_default_instance_;
PROTOBUF_CONSTEXPR TPetAdvancedTable::TPetAdvancedTable(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.skills_)*/{}
  , /*decltype(_impl_.attr_type_)*/{}
  , /*decltype(_impl_._attr_type_cached_byte_size_)*/{0}
  , /*decltype(_impl_.attr_level_)*/{}
  , /*decltype(_impl_._attr_level_cached_byte_size_)*/{0}
  , /*decltype(_impl_.attr_can_upgrade_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.item_id_)*/0u
  , /*decltype(_impl_.level_)*/0u
  , /*decltype(_impl_.exp_)*/int64_t{0}
  , /*decltype(_impl_.exp_item_)*/int64_t{0}
  , /*decltype(_impl_.skillpower_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TPetAdvancedTableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TPetAdvancedTableDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TPetAdvancedTableDefaultTypeInternal() {}
  union {
    TPetAdvancedTable _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TPetAdvancedTableDefaultTypeInternal _TPetAdvancedTable_default_instance_;
}  // namespace network
static ::_pb::Metadata file_level_metadata_data_5fpet_2eproto[5];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_data_5fpet_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_data_5fpet_2eproto = nullptr;

const uint32_t TableStruct_data_5fpet_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedSkillProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedSkillProto, _impl_.apply_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedSkillProto, _impl_.value_expr_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedSkillProto, _impl_.is_heroic_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedEvolveProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedEvolveProto, _impl_.level_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedEvolveProto, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedEvolveProto, _impl_.refine_id_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedEvolveProto, _impl_.scale_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedEvolveProto, _impl_.normal_skill_count_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedEvolveProto, _impl_.heroic_skill_count_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedEvolveProto, _impl_.skillpower_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedEvolveProto, _impl_.skillpower_rerollable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedAttrProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedAttrProto, _impl_.apply_level_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedAttrProto, _impl_.apply_type_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedAttrProto, _impl_.value_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedAttrProto, _impl_.refine_id_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedAttrProto, _impl_.required_pet_level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedSkillData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedSkillData, _impl_.vnum_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedSkillData, _impl_.level_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedSkillData, _impl_.changed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedTable, _impl_.item_id_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedTable, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedTable, _impl_.level_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedTable, _impl_.exp_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedTable, _impl_.exp_item_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedTable, _impl_.skills_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedTable, _impl_.attr_type_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedTable, _impl_.attr_level_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedTable, _impl_.attr_can_upgrade_),
  PROTOBUF_FIELD_OFFSET(::network::TPetAdvancedTable, _impl_.skillpower_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::network::TPetAdvancedSkillProto)},
  { 9, -1, -1, sizeof(::network::TPetAdvancedEvolveProto)},
  { 23, -1, -1, sizeof(::network::TPetAdvancedAttrProto)},
  { 34, -1, -1, sizeof(::network::TPetAdvancedSkillData)},
  { 43, -1, -1, sizeof(::network::TPetAdvancedTable)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::network::_TPetAdvancedSkillProto_default_instance_._instance,
  &::network::_TPetAdvancedEvolveProto_default_instance_._instance,
  &::network::_TPetAdvancedAttrProto_default_instance_._instance,
  &::network::_TPetAdvancedSkillData_default_instance_._instance,
  &::network::_TPetAdvancedTable_default_instance_._instance,
};

const char descriptor_table_protodef_data_5fpet_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016data_pet.proto\022\007network\"N\n\026TPetAdvance"
  "dSkillProto\022\r\n\005apply\030\001 \001(\r\022\022\n\nvalue_expr"
  "\030\002 \001(\t\022\021\n\tis_heroic\030\003 \001(\010\"\303\001\n\027TPetAdvanc"
  "edEvolveProto\022\r\n\005level\030\001 \001(\r\022\014\n\004name\030\002 \001"
  "(\t\022\021\n\trefine_id\030\003 \001(\r\022\r\n\005scale\030\004 \001(\002\022\032\n\022"
  "normal_skill_count\030\005 \001(\r\022\032\n\022heroic_skill"
  "_count\030\006 \001(\r\022\022\n\nskillpower\030\007 \001(\r\022\035\n\025skil"
  "lpower_rerollable\030\010 \001(\010\"~\n\025TPetAdvancedA"
  "ttrProto\022\023\n\013apply_level\030\001 \001(\r\022\022\n\napply_t"
  "ype\030\002 \001(\r\022\r\n\005value\030\003 \001(\002\022\021\n\trefine_id\030\004 "
  "\001(\r\022\032\n\022required_pet_level\030\005 \001(\r\"E\n\025TPetA"
  "dvancedSkillData\022\014\n\004vnum\030\001 \001(\r\022\r\n\005level\030"
  "\002 \001(\r\022\017\n\007changed\030\003 \001(\010\"\345\001\n\021TPetAdvancedT"
  "able\022\017\n\007item_id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\r\n\005l"
  "evel\030\003 \001(\r\022\013\n\003exp\030\004 \001(\003\022\020\n\010exp_item\030\005 \001("
  "\003\022.\n\006skills\030\006 \003(\0132\036.network.TPetAdvanced"
  "SkillData\022\021\n\tattr_type\030\007 \003(\r\022\022\n\nattr_lev"
  "el\030\010 \003(\r\022\030\n\020attr_can_upgrade\030\t \003(\010\022\022\n\nsk"
  "illpower\030\n \001(\rb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_data_5fpet_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_data_5fpet_2eproto = {
    false, false, 742, descriptor_table_protodef_data_5fpet_2eproto,
    "data_pet.proto",
    &descriptor_table_data_5fpet_2eproto_once, nullptr, 0, 5,
    schemas, file_default_instances, TableStruct_data_5fpet_2eproto::offsets,
    file_level_metadata_data_5fpet_2eproto, file_level_enum_descriptors_data_5fpet_2eproto,
    file_level_service_descriptors_data_5fpet_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_data_5fpet_2eproto_getter() {
  return &descriptor_table_data_5fpet_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_data_5fpet_2eproto(&descriptor_table_data_5fpet_2eproto);
namespace network {

// ===================================================================

class TPetAdvancedSkillProto::_Internal {
 public:
};

TPetAdvancedSkillProto::TPetAdvancedSkillProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:network.TPetAdvancedSkillProto)
}
TPetAdvancedSkillProto::TPetAdvancedSkillProto(const TPetAdvancedSkillProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TPetAdvancedSkillProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.value_expr_){}
    , decltype(_impl_.apply_){}
    , decltype(_impl_.is_heroic_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.value_expr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value_expr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value_expr().empty()) {
    _this->_impl_.value_expr_.Set(from._internal_value_expr(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.apply_, &from._impl_.apply_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.is_heroic_) -
    reinterpret_cast<char*>(&_impl_.apply_)) + sizeof(_impl_.is_heroic_));
  // @@protoc_insertion_point(copy_constructor:network.TPetAdvancedSkillProto)
}

inline void TPetAdvancedSkillProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.value_expr_){}
    , decltype(_impl_.apply_){0u}
    , decltype(_impl_.is_heroic_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.value_expr_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.value_expr_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TPetAdvancedSkillProto::~TPetAdvancedSkillProto() {
  // @@protoc_insertion_point(destructor:network.TPetAdvancedSkillProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TPetAdvancedSkillProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.value_expr_.Destroy();
}

void TPetAdvancedSkillProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TPetAdvancedSkillProto::Clear() {
// @@protoc_insertion_point(message_clear_start:network.TPetAdvancedSkillProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_expr_.ClearToEmpty();
  ::memset(&_impl_.apply_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.is_heroic_) -
      reinterpret_cast<char*>(&_impl_.apply_)) + sizeof(_impl_.is_heroic_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TPetAdvancedSkillProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 apply = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.apply_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string value_expr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_value_expr();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "network.TPetAdvancedSkillProto.value_expr"));
        } else
          goto handle_unusual;
        continue;
      // bool is_heroic = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.is_heroic_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TPetAdvancedSkillProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:network.TPetAdvancedSkillProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 apply = 1;
  if (this->_internal_apply() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_apply(), target);
  }

  // string value_expr = 2;
  if (!this->_internal_value_expr().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value_expr().data(), static_cast<int>(this->_internal_value_expr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "network.TPetAdvancedSkillProto.value_expr");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value_expr(), target);
  }

  // bool is_heroic = 3;
  if (this->_internal_is_heroic() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_is_heroic(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.TPetAdvancedSkillProto)
  return target;
}

size_t TPetAdvancedSkillProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.TPetAdvancedSkillProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value_expr = 2;
  if (!this->_internal_value_expr().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value_expr());
  }

  // uint32 apply = 1;
  if (this->_internal_apply() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_apply());
  }

  // bool is_heroic = 3;
  if (this->_internal_is_heroic() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TPetAdvancedSkillProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TPetAdvancedSkillProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TPetAdvancedSkillProto::GetClassData() const { return &_class_data_; }


void TPetAdvancedSkillProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TPetAdvancedSkillProto*>(&to_msg);
  auto& from = static_cast<const TPetAdvancedSkillProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:network.TPetAdvancedSkillProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value_expr().empty()) {
    _this->_internal_set_value_expr(from._internal_value_expr());
  }
  if (from._internal_apply() != 0) {
    _this->_internal_set_apply(from._internal_apply());
  }
  if (from._internal_is_heroic() != 0) {
    _this->_internal_set_is_heroic(from._internal_is_heroic());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TPetAdvancedSkillProto::CopyFrom(const TPetAdvancedSkillProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.TPetAdvancedSkillProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPetAdvancedSkillProto::IsInitialized() const {
  return true;
}

void TPetAdvancedSkillProto::InternalSwap(TPetAdvancedSkillProto* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.value_expr_, lhs_arena,
      &other->_impl_.value_expr_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TPetAdvancedSkillProto, _impl_.is_heroic_)
      + sizeof(TPetAdvancedSkillProto::_impl_.is_heroic_)
      - PROTOBUF_FIELD_OFFSET(TPetAdvancedSkillProto, _impl_.apply_)>(
          reinterpret_cast<char*>(&_impl_.apply_),
          reinterpret_cast<char*>(&other->_impl_.apply_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TPetAdvancedSkillProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fpet_2eproto_getter, &descriptor_table_data_5fpet_2eproto_once,
      file_level_metadata_data_5fpet_2eproto[0]);
}

// ===================================================================

class TPetAdvancedEvolveProto::_Internal {
 public:
};

TPetAdvancedEvolveProto::TPetAdvancedEvolveProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:network.TPetAdvancedEvolveProto)
}
TPetAdvancedEvolveProto::TPetAdvancedEvolveProto(const TPetAdvancedEvolveProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TPetAdvancedEvolveProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.level_){}
    , decltype(_impl_.refine_id_){}
    , decltype(_impl_.scale_){}
    , decltype(_impl_.normal_skill_count_){}
    , decltype(_impl_.heroic_skill_count_){}
    , decltype(_impl_.skillpower_){}
    , decltype(_impl_.skillpower_rerollable_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.level_, &from._impl_.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.skillpower_rerollable_) -
    reinterpret_cast<char*>(&_impl_.level_)) + sizeof(_impl_.skillpower_rerollable_));
  // @@protoc_insertion_point(copy_constructor:network.TPetAdvancedEvolveProto)
}

inline void TPetAdvancedEvolveProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.level_){0u}
    , decltype(_impl_.refine_id_){0u}
    , decltype(_impl_.scale_){0}
    , decltype(_impl_.normal_skill_count_){0u}
    , decltype(_impl_.heroic_skill_count_){0u}
    , decltype(_impl_.skillpower_){0u}
    , decltype(_impl_.skillpower_rerollable_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TPetAdvancedEvolveProto::~TPetAdvancedEvolveProto() {
  // @@protoc_insertion_point(destructor:network.TPetAdvancedEvolveProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TPetAdvancedEvolveProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void TPetAdvancedEvolveProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TPetAdvancedEvolveProto::Clear() {
// @@protoc_insertion_point(message_clear_start:network.TPetAdvancedEvolveProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.skillpower_rerollable_) -
      reinterpret_cast<char*>(&_impl_.level_)) + sizeof(_impl_.skillpower_rerollable_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TPetAdvancedEvolveProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "network.TPetAdvancedEvolveProto.name"));
        } else
          goto handle_unusual;
        continue;
      // uint32 refine_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.refine_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float scale = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _impl_.scale_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // uint32 normal_skill_count = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.normal_skill_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 heroic_skill_count = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.heroic_skill_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 skillpower = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.skillpower_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool skillpower_rerollable = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.skillpower_rerollable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TPetAdvancedEvolveProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:network.TPetAdvancedEvolveProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 1;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_level(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "network.TPetAdvancedEvolveProto.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // uint32 refine_id = 3;
  if (this->_internal_refine_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_refine_id(), target);
  }

  // float scale = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_scale = this->_internal_scale();
  uint32_t raw_scale;
  memcpy(&raw_scale, &tmp_scale, sizeof(tmp_scale));
  if (raw_scale != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_scale(), target);
  }

  // uint32 normal_skill_count = 5;
  if (this->_internal_normal_skill_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_normal_skill_count(), target);
  }

  // uint32 heroic_skill_count = 6;
  if (this->_internal_heroic_skill_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(6, this->_internal_heroic_skill_count(), target);
  }

  // uint32 skillpower = 7;
  if (this->_internal_skillpower() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(7, this->_internal_skillpower(), target);
  }

  // bool skillpower_rerollable = 8;
  if (this->_internal_skillpower_rerollable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(8, this->_internal_skillpower_rerollable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.TPetAdvancedEvolveProto)
  return target;
}

size_t TPetAdvancedEvolveProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.TPetAdvancedEvolveProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint32 level = 1;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_level());
  }

  // uint32 refine_id = 3;
  if (this->_internal_refine_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_refine_id());
  }

  // float scale = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_scale = this->_internal_scale();
  uint32_t raw_scale;
  memcpy(&raw_scale, &tmp_scale, sizeof(tmp_scale));
  if (raw_scale != 0) {
    total_size += 1 + 4;
  }

  // uint32 normal_skill_count = 5;
  if (this->_internal_normal_skill_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_normal_skill_count());
  }

  // uint32 heroic_skill_count = 6;
  if (this->_internal_heroic_skill_count() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_heroic_skill_count());
  }

  // uint32 skillpower = 7;
  if (this->_internal_skillpower() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_skillpower());
  }

  // bool skillpower_rerollable = 8;
  if (this->_internal_skillpower_rerollable() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TPetAdvancedEvolveProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TPetAdvancedEvolveProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TPetAdvancedEvolveProto::GetClassData() const { return &_class_data_; }


void TPetAdvancedEvolveProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TPetAdvancedEvolveProto*>(&to_msg);
  auto& from = static_cast<const TPetAdvancedEvolveProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:network.TPetAdvancedEvolveProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_level() != 0) {
    _this->_internal_set_level(from._internal_level());
  }
  if (from._internal_refine_id() != 0) {
    _this->_internal_set_refine_id(from._internal_refine_id());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_scale = from._internal_scale();
  uint32_t raw_scale;
  memcpy(&raw_scale, &tmp_scale, sizeof(tmp_scale));
  if (raw_scale != 0) {
    _this->_internal_set_scale(from._internal_scale());
  }
  if (from._internal_normal_skill_count() != 0) {
    _this->_internal_set_normal_skill_count(from._internal_normal_skill_count());
  }
  if (from._internal_heroic_skill_count() != 0) {
    _this->_internal_set_heroic_skill_count(from._internal_heroic_skill_count());
  }
  if (from._internal_skillpower() != 0) {
    _this->_internal_set_skillpower(from._internal_skillpower());
  }
  if (from._internal_skillpower_rerollable() != 0) {
    _this->_internal_set_skillpower_rerollable(from._internal_skillpower_rerollable());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TPetAdvancedEvolveProto::CopyFrom(const TPetAdvancedEvolveProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.TPetAdvancedEvolveProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPetAdvancedEvolveProto::IsInitialized() const {
  return true;
}

void TPetAdvancedEvolveProto::InternalSwap(TPetAdvancedEvolveProto* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TPetAdvancedEvolveProto, _impl_.skillpower_rerollable_)
      + sizeof(TPetAdvancedEvolveProto::_impl_.skillpower_rerollable_)
      - PROTOBUF_FIELD_OFFSET(TPetAdvancedEvolveProto, _impl_.level_)>(
          reinterpret_cast<char*>(&_impl_.level_),
          reinterpret_cast<char*>(&other->_impl_.level_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TPetAdvancedEvolveProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fpet_2eproto_getter, &descriptor_table_data_5fpet_2eproto_once,
      file_level_metadata_data_5fpet_2eproto[1]);
}

// ===================================================================

class TPetAdvancedAttrProto::_Internal {
 public:
};

TPetAdvancedAttrProto::TPetAdvancedAttrProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:network.TPetAdvancedAttrProto)
}
TPetAdvancedAttrProto::TPetAdvancedAttrProto(const TPetAdvancedAttrProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TPetAdvancedAttrProto* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.apply_level_){}
    , decltype(_impl_.apply_type_){}
    , decltype(_impl_.value_){}
    , decltype(_impl_.refine_id_){}
    , decltype(_impl_.required_pet_level_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.apply_level_, &from._impl_.apply_level_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.required_pet_level_) -
    reinterpret_cast<char*>(&_impl_.apply_level_)) + sizeof(_impl_.required_pet_level_));
  // @@protoc_insertion_point(copy_constructor:network.TPetAdvancedAttrProto)
}

inline void TPetAdvancedAttrProto::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.apply_level_){0u}
    , decltype(_impl_.apply_type_){0u}
    , decltype(_impl_.value_){0}
    , decltype(_impl_.refine_id_){0u}
    , decltype(_impl_.required_pet_level_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TPetAdvancedAttrProto::~TPetAdvancedAttrProto() {
  // @@protoc_insertion_point(destructor:network.TPetAdvancedAttrProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TPetAdvancedAttrProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TPetAdvancedAttrProto::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TPetAdvancedAttrProto::Clear() {
// @@protoc_insertion_point(message_clear_start:network.TPetAdvancedAttrProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.apply_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.required_pet_level_) -
      reinterpret_cast<char*>(&_impl_.apply_level_)) + sizeof(_impl_.required_pet_level_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TPetAdvancedAttrProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 apply_level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.apply_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 apply_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.apply_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float value = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // uint32 refine_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.refine_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 required_pet_level = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.required_pet_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TPetAdvancedAttrProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:network.TPetAdvancedAttrProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 apply_level = 1;
  if (this->_internal_apply_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_apply_level(), target);
  }

  // uint32 apply_type = 2;
  if (this->_internal_apply_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_apply_type(), target);
  }

  // float value = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_value(), target);
  }

  // uint32 refine_id = 4;
  if (this->_internal_refine_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_refine_id(), target);
  }

  // uint32 required_pet_level = 5;
  if (this->_internal_required_pet_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(5, this->_internal_required_pet_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.TPetAdvancedAttrProto)
  return target;
}

size_t TPetAdvancedAttrProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.TPetAdvancedAttrProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 apply_level = 1;
  if (this->_internal_apply_level() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_apply_level());
  }

  // uint32 apply_type = 2;
  if (this->_internal_apply_type() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_apply_type());
  }

  // float value = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_value = this->_internal_value();
  uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    total_size += 1 + 4;
  }

  // uint32 refine_id = 4;
  if (this->_internal_refine_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_refine_id());
  }

  // uint32 required_pet_level = 5;
  if (this->_internal_required_pet_level() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_required_pet_level());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TPetAdvancedAttrProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TPetAdvancedAttrProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TPetAdvancedAttrProto::GetClassData() const { return &_class_data_; }


void TPetAdvancedAttrProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TPetAdvancedAttrProto*>(&to_msg);
  auto& from = static_cast<const TPetAdvancedAttrProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:network.TPetAdvancedAttrProto)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_apply_level() != 0) {
    _this->_internal_set_apply_level(from._internal_apply_level());
  }
  if (from._internal_apply_type() != 0) {
    _this->_internal_set_apply_type(from._internal_apply_type());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_value = from._internal_value();
  uint32_t raw_value;
  memcpy(&raw_value, &tmp_value, sizeof(tmp_value));
  if (raw_value != 0) {
    _this->_internal_set_value(from._internal_value());
  }
  if (from._internal_refine_id() != 0) {
    _this->_internal_set_refine_id(from._internal_refine_id());
  }
  if (from._internal_required_pet_level() != 0) {
    _this->_internal_set_required_pet_level(from._internal_required_pet_level());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TPetAdvancedAttrProto::CopyFrom(const TPetAdvancedAttrProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.TPetAdvancedAttrProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPetAdvancedAttrProto::IsInitialized() const {
  return true;
}

void TPetAdvancedAttrProto::InternalSwap(TPetAdvancedAttrProto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TPetAdvancedAttrProto, _impl_.required_pet_level_)
      + sizeof(TPetAdvancedAttrProto::_impl_.required_pet_level_)
      - PROTOBUF_FIELD_OFFSET(TPetAdvancedAttrProto, _impl_.apply_level_)>(
          reinterpret_cast<char*>(&_impl_.apply_level_),
          reinterpret_cast<char*>(&other->_impl_.apply_level_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TPetAdvancedAttrProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fpet_2eproto_getter, &descriptor_table_data_5fpet_2eproto_once,
      file_level_metadata_data_5fpet_2eproto[2]);
}

// ===================================================================

class TPetAdvancedSkillData::_Internal {
 public:
};

TPetAdvancedSkillData::TPetAdvancedSkillData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:network.TPetAdvancedSkillData)
}
TPetAdvancedSkillData::TPetAdvancedSkillData(const TPetAdvancedSkillData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TPetAdvancedSkillData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.vnum_){}
    , decltype(_impl_.level_){}
    , decltype(_impl_.changed_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.vnum_, &from._impl_.vnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.changed_) -
    reinterpret_cast<char*>(&_impl_.vnum_)) + sizeof(_impl_.changed_));
  // @@protoc_insertion_point(copy_constructor:network.TPetAdvancedSkillData)
}

inline void TPetAdvancedSkillData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.vnum_){0u}
    , decltype(_impl_.level_){0u}
    , decltype(_impl_.changed_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TPetAdvancedSkillData::~TPetAdvancedSkillData() {
  // @@protoc_insertion_point(destructor:network.TPetAdvancedSkillData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TPetAdvancedSkillData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TPetAdvancedSkillData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TPetAdvancedSkillData::Clear() {
// @@protoc_insertion_point(message_clear_start:network.TPetAdvancedSkillData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.vnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.changed_) -
      reinterpret_cast<char*>(&_impl_.vnum_)) + sizeof(_impl_.changed_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TPetAdvancedSkillData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 vnum = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.vnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool changed = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.changed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TPetAdvancedSkillData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:network.TPetAdvancedSkillData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 vnum = 1;
  if (this->_internal_vnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_vnum(), target);
  }

  // uint32 level = 2;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_level(), target);
  }

  // bool changed = 3;
  if (this->_internal_changed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_changed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.TPetAdvancedSkillData)
  return target;
}

size_t TPetAdvancedSkillData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.TPetAdvancedSkillData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 vnum = 1;
  if (this->_internal_vnum() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_vnum());
  }

  // uint32 level = 2;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_level());
  }

  // bool changed = 3;
  if (this->_internal_changed() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TPetAdvancedSkillData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TPetAdvancedSkillData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TPetAdvancedSkillData::GetClassData() const { return &_class_data_; }


void TPetAdvancedSkillData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TPetAdvancedSkillData*>(&to_msg);
  auto& from = static_cast<const TPetAdvancedSkillData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:network.TPetAdvancedSkillData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_vnum() != 0) {
    _this->_internal_set_vnum(from._internal_vnum());
  }
  if (from._internal_level() != 0) {
    _this->_internal_set_level(from._internal_level());
  }
  if (from._internal_changed() != 0) {
    _this->_internal_set_changed(from._internal_changed());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TPetAdvancedSkillData::CopyFrom(const TPetAdvancedSkillData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.TPetAdvancedSkillData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPetAdvancedSkillData::IsInitialized() const {
  return true;
}

void TPetAdvancedSkillData::InternalSwap(TPetAdvancedSkillData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TPetAdvancedSkillData, _impl_.changed_)
      + sizeof(TPetAdvancedSkillData::_impl_.changed_)
      - PROTOBUF_FIELD_OFFSET(TPetAdvancedSkillData, _impl_.vnum_)>(
          reinterpret_cast<char*>(&_impl_.vnum_),
          reinterpret_cast<char*>(&other->_impl_.vnum_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TPetAdvancedSkillData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fpet_2eproto_getter, &descriptor_table_data_5fpet_2eproto_once,
      file_level_metadata_data_5fpet_2eproto[3]);
}

// ===================================================================

class TPetAdvancedTable::_Internal {
 public:
};

TPetAdvancedTable::TPetAdvancedTable(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:network.TPetAdvancedTable)
}
TPetAdvancedTable::TPetAdvancedTable(const TPetAdvancedTable& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TPetAdvancedTable* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.skills_){from._impl_.skills_}
    , decltype(_impl_.attr_type_){from._impl_.attr_type_}
    , /*decltype(_impl_._attr_type_cached_byte_size_)*/{0}
    , decltype(_impl_.attr_level_){from._impl_.attr_level_}
    , /*decltype(_impl_._attr_level_cached_byte_size_)*/{0}
    , decltype(_impl_.attr_can_upgrade_){from._impl_.attr_can_upgrade_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.item_id_){}
    , decltype(_impl_.level_){}
    , decltype(_impl_.exp_){}
    , decltype(_impl_.exp_item_){}
    , decltype(_impl_.skillpower_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.item_id_, &from._impl_.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.skillpower_) -
    reinterpret_cast<char*>(&_impl_.item_id_)) + sizeof(_impl_.skillpower_));
  // @@protoc_insertion_point(copy_constructor:network.TPetAdvancedTable)
}

inline void TPetAdvancedTable::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.skills_){arena}
    , decltype(_impl_.attr_type_){arena}
    , /*decltype(_impl_._attr_type_cached_byte_size_)*/{0}
    , decltype(_impl_.attr_level_){arena}
    , /*decltype(_impl_._attr_level_cached_byte_size_)*/{0}
    , decltype(_impl_.attr_can_upgrade_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.item_id_){0u}
    , decltype(_impl_.level_){0u}
    , decltype(_impl_.exp_){int64_t{0}}
    , decltype(_impl_.exp_item_){int64_t{0}}
    , decltype(_impl_.skillpower_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

TPetAdvancedTable::~TPetAdvancedTable() {
  // @@protoc_insertion_point(destructor:network.TPetAdvancedTable)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TPetAdvancedTable::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.skills_.~RepeatedPtrField();
  _impl_.attr_type_.~RepeatedField();
  _impl_.attr_level_.~RepeatedField();
  _impl_.attr_can_upgrade_.~RepeatedField();
  _impl_.name_.Destroy();
}

void TPetAdvancedTable::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TPetAdvancedTable::Clear() {
// @@protoc_insertion_point(message_clear_start:network.TPetAdvancedTable)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.skills_.Clear();
  _impl_.attr_type_.Clear();
  _impl_.attr_level_.Clear();
  _impl_.attr_can_upgrade_.Clear();
  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.skillpower_) -
      reinterpret_cast<char*>(&_impl_.item_id_)) + sizeof(_impl_.skillpower_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TPetAdvancedTable::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.item_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "network.TPetAdvancedTable.name"));
        } else
          goto handle_unusual;
        continue;
      // uint32 level = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 exp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.exp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 exp_item = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.exp_item_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .network.TPetAdvancedSkillData skills = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_skills(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 attr_type = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_attr_type(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 56) {
          _internal_add_attr_type(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 attr_level = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_attr_level(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 64) {
          _internal_add_attr_level(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated bool attr_can_upgrade = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedBoolParser(_internal_mutable_attr_can_upgrade(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 72) {
          _internal_add_attr_can_upgrade(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 skillpower = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.skillpower_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TPetAdvancedTable::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:network.TPetAdvancedTable)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->_internal_item_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_item_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "network.TPetAdvancedTable.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // uint32 level = 3;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_level(), target);
  }

  // int64 exp = 4;
  if (this->_internal_exp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_exp(), target);
  }

  // int64 exp_item = 5;
  if (this->_internal_exp_item() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_exp_item(), target);
  }

  // repeated .network.TPetAdvancedSkillData skills = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_skills_size()); i < n; i++) {
    const auto& repfield = this->_internal_skills(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated uint32 attr_type = 7;
  {
    int byte_size = _impl_._attr_type_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          7, _internal_attr_type(), byte_size, target);
    }
  }

  // repeated uint32 attr_level = 8;
  {
    int byte_size = _impl_._attr_level_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          8, _internal_attr_level(), byte_size, target);
    }
  }

  // repeated bool attr_can_upgrade = 9;
  if (this->_internal_attr_can_upgrade_size() > 0) {
    target = stream->WriteFixedPacked(9, _internal_attr_can_upgrade(), target);
  }

  // uint32 skillpower = 10;
  if (this->_internal_skillpower() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(10, this->_internal_skillpower(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:network.TPetAdvancedTable)
  return target;
}

size_t TPetAdvancedTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:network.TPetAdvancedTable)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .network.TPetAdvancedSkillData skills = 6;
  total_size += 1UL * this->_internal_skills_size();
  for (const auto& msg : this->_impl_.skills_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated uint32 attr_type = 7;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.attr_type_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._attr_type_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint32 attr_level = 8;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt32Size(this->_impl_.attr_level_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._attr_level_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated bool attr_can_upgrade = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_attr_can_upgrade_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint32 item_id = 1;
  if (this->_internal_item_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_item_id());
  }

  // uint32 level = 3;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_level());
  }

  // int64 exp = 4;
  if (this->_internal_exp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_exp());
  }

  // int64 exp_item = 5;
  if (this->_internal_exp_item() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_exp_item());
  }

  // uint32 skillpower = 10;
  if (this->_internal_skillpower() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_skillpower());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TPetAdvancedTable::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TPetAdvancedTable::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TPetAdvancedTable::GetClassData() const { return &_class_data_; }


void TPetAdvancedTable::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TPetAdvancedTable*>(&to_msg);
  auto& from = static_cast<const TPetAdvancedTable&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:network.TPetAdvancedTable)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.skills_.MergeFrom(from._impl_.skills_);
  _this->_impl_.attr_type_.MergeFrom(from._impl_.attr_type_);
  _this->_impl_.attr_level_.MergeFrom(from._impl_.attr_level_);
  _this->_impl_.attr_can_upgrade_.MergeFrom(from._impl_.attr_can_upgrade_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_item_id() != 0) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  if (from._internal_level() != 0) {
    _this->_internal_set_level(from._internal_level());
  }
  if (from._internal_exp() != 0) {
    _this->_internal_set_exp(from._internal_exp());
  }
  if (from._internal_exp_item() != 0) {
    _this->_internal_set_exp_item(from._internal_exp_item());
  }
  if (from._internal_skillpower() != 0) {
    _this->_internal_set_skillpower(from._internal_skillpower());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TPetAdvancedTable::CopyFrom(const TPetAdvancedTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:network.TPetAdvancedTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPetAdvancedTable::IsInitialized() const {
  return true;
}

void TPetAdvancedTable::InternalSwap(TPetAdvancedTable* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.skills_.InternalSwap(&other->_impl_.skills_);
  _impl_.attr_type_.InternalSwap(&other->_impl_.attr_type_);
  _impl_.attr_level_.InternalSwap(&other->_impl_.attr_level_);
  _impl_.attr_can_upgrade_.InternalSwap(&other->_impl_.attr_can_upgrade_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TPetAdvancedTable, _impl_.skillpower_)
      + sizeof(TPetAdvancedTable::_impl_.skillpower_)
      - PROTOBUF_FIELD_OFFSET(TPetAdvancedTable, _impl_.item_id_)>(
          reinterpret_cast<char*>(&_impl_.item_id_),
          reinterpret_cast<char*>(&other->_impl_.item_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TPetAdvancedTable::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_data_5fpet_2eproto_getter, &descriptor_table_data_5fpet_2eproto_once,
      file_level_metadata_data_5fpet_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace network
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::network::TPetAdvancedSkillProto*
Arena::CreateMaybeMessage< ::network::TPetAdvancedSkillProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::network::TPetAdvancedSkillProto >(arena);
}
template<> PROTOBUF_NOINLINE ::network::TPetAdvancedEvolveProto*
Arena::CreateMaybeMessage< ::network::TPetAdvancedEvolveProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::network::TPetAdvancedEvolveProto >(arena);
}
template<> PROTOBUF_NOINLINE ::network::TPetAdvancedAttrProto*
Arena::CreateMaybeMessage< ::network::TPetAdvancedAttrProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::network::TPetAdvancedAttrProto >(arena);
}
template<> PROTOBUF_NOINLINE ::network::TPetAdvancedSkillData*
Arena::CreateMaybeMessage< ::network::TPetAdvancedSkillData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::network::TPetAdvancedSkillData >(arena);
}
template<> PROTOBUF_NOINLINE ::network::TPetAdvancedTable*
Arena::CreateMaybeMessage< ::network::TPetAdvancedTable >(Arena* arena) {
  return Arena::CreateMessageInternal< ::network::TPetAdvancedTable >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
