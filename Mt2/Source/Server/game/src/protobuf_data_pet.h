// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_pet.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_data_5fpet_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_data_5fpet_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_data_5fpet_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_data_5fpet_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_data_5fpet_2eproto;
namespace network {
class TPetAdvancedAttrProto;
struct TPetAdvancedAttrProtoDefaultTypeInternal;
extern TPetAdvancedAttrProtoDefaultTypeInternal _TPetAdvancedAttrProto_default_instance_;
class TPetAdvancedEvolveProto;
struct TPetAdvancedEvolveProtoDefaultTypeInternal;
extern TPetAdvancedEvolveProtoDefaultTypeInternal _TPetAdvancedEvolveProto_default_instance_;
class TPetAdvancedSkillData;
struct TPetAdvancedSkillDataDefaultTypeInternal;
extern TPetAdvancedSkillDataDefaultTypeInternal _TPetAdvancedSkillData_default_instance_;
class TPetAdvancedSkillProto;
struct TPetAdvancedSkillProtoDefaultTypeInternal;
extern TPetAdvancedSkillProtoDefaultTypeInternal _TPetAdvancedSkillProto_default_instance_;
class TPetAdvancedTable;
struct TPetAdvancedTableDefaultTypeInternal;
extern TPetAdvancedTableDefaultTypeInternal _TPetAdvancedTable_default_instance_;
}  // namespace network
PROTOBUF_NAMESPACE_OPEN
template<> ::network::TPetAdvancedAttrProto* Arena::CreateMaybeMessage<::network::TPetAdvancedAttrProto>(Arena*);
template<> ::network::TPetAdvancedEvolveProto* Arena::CreateMaybeMessage<::network::TPetAdvancedEvolveProto>(Arena*);
template<> ::network::TPetAdvancedSkillData* Arena::CreateMaybeMessage<::network::TPetAdvancedSkillData>(Arena*);
template<> ::network::TPetAdvancedSkillProto* Arena::CreateMaybeMessage<::network::TPetAdvancedSkillProto>(Arena*);
template<> ::network::TPetAdvancedTable* Arena::CreateMaybeMessage<::network::TPetAdvancedTable>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace network {

// ===================================================================

class TPetAdvancedSkillProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:network.TPetAdvancedSkillProto) */ {
 public:
  inline TPetAdvancedSkillProto() : TPetAdvancedSkillProto(nullptr) {}
  ~TPetAdvancedSkillProto() override;
  explicit PROTOBUF_CONSTEXPR TPetAdvancedSkillProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TPetAdvancedSkillProto(const TPetAdvancedSkillProto& from);
  TPetAdvancedSkillProto(TPetAdvancedSkillProto&& from) noexcept
    : TPetAdvancedSkillProto() {
    *this = ::std::move(from);
  }

  inline TPetAdvancedSkillProto& operator=(const TPetAdvancedSkillProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline TPetAdvancedSkillProto& operator=(TPetAdvancedSkillProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TPetAdvancedSkillProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const TPetAdvancedSkillProto* internal_default_instance() {
    return reinterpret_cast<const TPetAdvancedSkillProto*>(
               &_TPetAdvancedSkillProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TPetAdvancedSkillProto& a, TPetAdvancedSkillProto& b) {
    a.Swap(&b);
  }
  inline void Swap(TPetAdvancedSkillProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TPetAdvancedSkillProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TPetAdvancedSkillProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TPetAdvancedSkillProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TPetAdvancedSkillProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const TPetAdvancedSkillProto& from) {
    TPetAdvancedSkillProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TPetAdvancedSkillProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "network.TPetAdvancedSkillProto";
  }
  protected:
  explicit TPetAdvancedSkillProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueExprFieldNumber = 2,
    kApplyFieldNumber = 1,
    kIsHeroicFieldNumber = 3,
  };
  // string value_expr = 2;
  void clear_value_expr();
  const std::string& value_expr() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_value_expr(ArgT0&& arg0, ArgT... args);
  std::string* mutable_value_expr();
  PROTOBUF_NODISCARD std::string* release_value_expr();
  void set_allocated_value_expr(std::string* value_expr);
  private:
  const std::string& _internal_value_expr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value_expr(const std::string& value);
  std::string* _internal_mutable_value_expr();
  public:

  // uint32 apply = 1;
  void clear_apply();
  uint32_t apply() const;
  void set_apply(uint32_t value);
  private:
  uint32_t _internal_apply() const;
  void _internal_set_apply(uint32_t value);
  public:

  // bool is_heroic = 3;
  void clear_is_heroic();
  bool is_heroic() const;
  void set_is_heroic(bool value);
  private:
  bool _internal_is_heroic() const;
  void _internal_set_is_heroic(bool value);
  public:

  // @@protoc_insertion_point(class_scope:network.TPetAdvancedSkillProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_expr_;
    uint32_t apply_;
    bool is_heroic_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_data_5fpet_2eproto;
};
// -------------------------------------------------------------------

class TPetAdvancedEvolveProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:network.TPetAdvancedEvolveProto) */ {
 public:
  inline TPetAdvancedEvolveProto() : TPetAdvancedEvolveProto(nullptr) {}
  ~TPetAdvancedEvolveProto() override;
  explicit PROTOBUF_CONSTEXPR TPetAdvancedEvolveProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TPetAdvancedEvolveProto(const TPetAdvancedEvolveProto& from);
  TPetAdvancedEvolveProto(TPetAdvancedEvolveProto&& from) noexcept
    : TPetAdvancedEvolveProto() {
    *this = ::std::move(from);
  }

  inline TPetAdvancedEvolveProto& operator=(const TPetAdvancedEvolveProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline TPetAdvancedEvolveProto& operator=(TPetAdvancedEvolveProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TPetAdvancedEvolveProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const TPetAdvancedEvolveProto* internal_default_instance() {
    return reinterpret_cast<const TPetAdvancedEvolveProto*>(
               &_TPetAdvancedEvolveProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TPetAdvancedEvolveProto& a, TPetAdvancedEvolveProto& b) {
    a.Swap(&b);
  }
  inline void Swap(TPetAdvancedEvolveProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TPetAdvancedEvolveProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TPetAdvancedEvolveProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TPetAdvancedEvolveProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TPetAdvancedEvolveProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const TPetAdvancedEvolveProto& from) {
    TPetAdvancedEvolveProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TPetAdvancedEvolveProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "network.TPetAdvancedEvolveProto";
  }
  protected:
  explicit TPetAdvancedEvolveProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kLevelFieldNumber = 1,
    kRefineIdFieldNumber = 3,
    kScaleFieldNumber = 4,
    kNormalSkillCountFieldNumber = 5,
    kHeroicSkillCountFieldNumber = 6,
    kSkillpowerFieldNumber = 7,
    kSkillpowerRerollableFieldNumber = 8,
  };
  // string name = 2;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint32 level = 1;
  void clear_level();
  uint32_t level() const;
  void set_level(uint32_t value);
  private:
  uint32_t _internal_level() const;
  void _internal_set_level(uint32_t value);
  public:

  // uint32 refine_id = 3;
  void clear_refine_id();
  uint32_t refine_id() const;
  void set_refine_id(uint32_t value);
  private:
  uint32_t _internal_refine_id() const;
  void _internal_set_refine_id(uint32_t value);
  public:

  // float scale = 4;
  void clear_scale();
  float scale() const;
  void set_scale(float value);
  private:
  float _internal_scale() const;
  void _internal_set_scale(float value);
  public:

  // uint32 normal_skill_count = 5;
  void clear_normal_skill_count();
  uint32_t normal_skill_count() const;
  void set_normal_skill_count(uint32_t value);
  private:
  uint32_t _internal_normal_skill_count() const;
  void _internal_set_normal_skill_count(uint32_t value);
  public:

  // uint32 heroic_skill_count = 6;
  void clear_heroic_skill_count();
  uint32_t heroic_skill_count() const;
  void set_heroic_skill_count(uint32_t value);
  private:
  uint32_t _internal_heroic_skill_count() const;
  void _internal_set_heroic_skill_count(uint32_t value);
  public:

  // uint32 skillpower = 7;
  void clear_skillpower();
  uint32_t skillpower() const;
  void set_skillpower(uint32_t value);
  private:
  uint32_t _internal_skillpower() const;
  void _internal_set_skillpower(uint32_t value);
  public:

  // bool skillpower_rerollable = 8;
  void clear_skillpower_rerollable();
  bool skillpower_rerollable() const;
  void set_skillpower_rerollable(bool value);
  private:
  bool _internal_skillpower_rerollable() const;
  void _internal_set_skillpower_rerollable(bool value);
  public:

  // @@protoc_insertion_point(class_scope:network.TPetAdvancedEvolveProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    uint32_t level_;
    uint32_t refine_id_;
    float scale_;
    uint32_t normal_skill_count_;
    uint32_t heroic_skill_count_;
    uint32_t skillpower_;
    bool skillpower_rerollable_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_data_5fpet_2eproto;
};
// -------------------------------------------------------------------

class TPetAdvancedAttrProto final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:network.TPetAdvancedAttrProto) */ {
 public:
  inline TPetAdvancedAttrProto() : TPetAdvancedAttrProto(nullptr) {}
  ~TPetAdvancedAttrProto() override;
  explicit PROTOBUF_CONSTEXPR TPetAdvancedAttrProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TPetAdvancedAttrProto(const TPetAdvancedAttrProto& from);
  TPetAdvancedAttrProto(TPetAdvancedAttrProto&& from) noexcept
    : TPetAdvancedAttrProto() {
    *this = ::std::move(from);
  }

  inline TPetAdvancedAttrProto& operator=(const TPetAdvancedAttrProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline TPetAdvancedAttrProto& operator=(TPetAdvancedAttrProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TPetAdvancedAttrProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const TPetAdvancedAttrProto* internal_default_instance() {
    return reinterpret_cast<const TPetAdvancedAttrProto*>(
               &_TPetAdvancedAttrProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(TPetAdvancedAttrProto& a, TPetAdvancedAttrProto& b) {
    a.Swap(&b);
  }
  inline void Swap(TPetAdvancedAttrProto* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TPetAdvancedAttrProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TPetAdvancedAttrProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TPetAdvancedAttrProto>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TPetAdvancedAttrProto& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const TPetAdvancedAttrProto& from) {
    TPetAdvancedAttrProto::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TPetAdvancedAttrProto* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "network.TPetAdvancedAttrProto";
  }
  protected:
  explicit TPetAdvancedAttrProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kApplyLevelFieldNumber = 1,
    kApplyTypeFieldNumber = 2,
    kValueFieldNumber = 3,
    kRefineIdFieldNumber = 4,
    kRequiredPetLevelFieldNumber = 5,
  };
  // uint32 apply_level = 1;
  void clear_apply_level();
  uint32_t apply_level() const;
  void set_apply_level(uint32_t value);
  private:
  uint32_t _internal_apply_level() const;
  void _internal_set_apply_level(uint32_t value);
  public:

  // uint32 apply_type = 2;
  void clear_apply_type();
  uint32_t apply_type() const;
  void set_apply_type(uint32_t value);
  private:
  uint32_t _internal_apply_type() const;
  void _internal_set_apply_type(uint32_t value);
  public:

  // float value = 3;
  void clear_value();
  float value() const;
  void set_value(float value);
  private:
  float _internal_value() const;
  void _internal_set_value(float value);
  public:

  // uint32 refine_id = 4;
  void clear_refine_id();
  uint32_t refine_id() const;
  void set_refine_id(uint32_t value);
  private:
  uint32_t _internal_refine_id() const;
  void _internal_set_refine_id(uint32_t value);
  public:

  // uint32 required_pet_level = 5;
  void clear_required_pet_level();
  uint32_t required_pet_level() const;
  void set_required_pet_level(uint32_t value);
  private:
  uint32_t _internal_required_pet_level() const;
  void _internal_set_required_pet_level(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:network.TPetAdvancedAttrProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint32_t apply_level_;
    uint32_t apply_type_;
    float value_;
    uint32_t refine_id_;
    uint32_t required_pet_level_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_data_5fpet_2eproto;
};
// -------------------------------------------------------------------

class TPetAdvancedSkillData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:network.TPetAdvancedSkillData) */ {
 public:
  inline TPetAdvancedSkillData() : TPetAdvancedSkillData(nullptr) {}
  ~TPetAdvancedSkillData() override;
  explicit PROTOBUF_CONSTEXPR TPetAdvancedSkillData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TPetAdvancedSkillData(const TPetAdvancedSkillData& from);
  TPetAdvancedSkillData(TPetAdvancedSkillData&& from) noexcept
    : TPetAdvancedSkillData() {
    *this = ::std::move(from);
  }

  inline TPetAdvancedSkillData& operator=(const TPetAdvancedSkillData& from) {
    CopyFrom(from);
    return *this;
  }
  inline TPetAdvancedSkillData& operator=(TPetAdvancedSkillData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TPetAdvancedSkillData& default_instance() {
    return *internal_default_instance();
  }
  static inline const TPetAdvancedSkillData* internal_default_instance() {
    return reinterpret_cast<const TPetAdvancedSkillData*>(
               &_TPetAdvancedSkillData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(TPetAdvancedSkillData& a, TPetAdvancedSkillData& b) {
    a.Swap(&b);
  }
  inline void Swap(TPetAdvancedSkillData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TPetAdvancedSkillData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TPetAdvancedSkillData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TPetAdvancedSkillData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TPetAdvancedSkillData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const TPetAdvancedSkillData& from) {
    TPetAdvancedSkillData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TPetAdvancedSkillData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "network.TPetAdvancedSkillData";
  }
  protected:
  explicit TPetAdvancedSkillData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVnumFieldNumber = 1,
    kLevelFieldNumber = 2,
    kChangedFieldNumber = 3,
  };
  // uint32 vnum = 1;
  void clear_vnum();
  uint32_t vnum() const;
  void set_vnum(uint32_t value);
  private:
  uint32_t _internal_vnum() const;
  void _internal_set_vnum(uint32_t value);
  public:

  // uint32 level = 2;
  void clear_level();
  uint32_t level() const;
  void set_level(uint32_t value);
  private:
  uint32_t _internal_level() const;
  void _internal_set_level(uint32_t value);
  public:

  // bool changed = 3;
  void clear_changed();
  bool changed() const;
  void set_changed(bool value);
  private:
  bool _internal_changed() const;
  void _internal_set_changed(bool value);
  public:

  // @@protoc_insertion_point(class_scope:network.TPetAdvancedSkillData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint32_t vnum_;
    uint32_t level_;
    bool changed_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_data_5fpet_2eproto;
};
// -------------------------------------------------------------------

class TPetAdvancedTable final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:network.TPetAdvancedTable) */ {
 public:
  inline TPetAdvancedTable() : TPetAdvancedTable(nullptr) {}
  ~TPetAdvancedTable() override;
  explicit PROTOBUF_CONSTEXPR TPetAdvancedTable(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TPetAdvancedTable(const TPetAdvancedTable& from);
  TPetAdvancedTable(TPetAdvancedTable&& from) noexcept
    : TPetAdvancedTable() {
    *this = ::std::move(from);
  }

  inline TPetAdvancedTable& operator=(const TPetAdvancedTable& from) {
    CopyFrom(from);
    return *this;
  }
  inline TPetAdvancedTable& operator=(TPetAdvancedTable&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TPetAdvancedTable& default_instance() {
    return *internal_default_instance();
  }
  static inline const TPetAdvancedTable* internal_default_instance() {
    return reinterpret_cast<const TPetAdvancedTable*>(
               &_TPetAdvancedTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(TPetAdvancedTable& a, TPetAdvancedTable& b) {
    a.Swap(&b);
  }
  inline void Swap(TPetAdvancedTable* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TPetAdvancedTable* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TPetAdvancedTable* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TPetAdvancedTable>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TPetAdvancedTable& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const TPetAdvancedTable& from) {
    TPetAdvancedTable::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TPetAdvancedTable* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "network.TPetAdvancedTable";
  }
  protected:
  explicit TPetAdvancedTable(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSkillsFieldNumber = 6,
    kAttrTypeFieldNumber = 7,
    kAttrLevelFieldNumber = 8,
    kAttrCanUpgradeFieldNumber = 9,
    kNameFieldNumber = 2,
    kItemIdFieldNumber = 1,
    kLevelFieldNumber = 3,
    kExpFieldNumber = 4,
    kExpItemFieldNumber = 5,
    kSkillpowerFieldNumber = 10,
  };
  // repeated .network.TPetAdvancedSkillData skills = 6;
  int skills_size() const;
  private:
  int _internal_skills_size() const;
  public:
  void clear_skills();
  ::network::TPetAdvancedSkillData* mutable_skills(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::network::TPetAdvancedSkillData >*
      mutable_skills();
  private:
  const ::network::TPetAdvancedSkillData& _internal_skills(int index) const;
  ::network::TPetAdvancedSkillData* _internal_add_skills();
  public:
  const ::network::TPetAdvancedSkillData& skills(int index) const;
  ::network::TPetAdvancedSkillData* add_skills();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::network::TPetAdvancedSkillData >&
      skills() const;

  // repeated uint32 attr_type = 7;
  int attr_type_size() const;
  private:
  int _internal_attr_type_size() const;
  public:
  void clear_attr_type();
  private:
  uint32_t _internal_attr_type(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_attr_type() const;
  void _internal_add_attr_type(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_attr_type();
  public:
  uint32_t attr_type(int index) const;
  void set_attr_type(int index, uint32_t value);
  void add_attr_type(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      attr_type() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_attr_type();

  // repeated uint32 attr_level = 8;
  int attr_level_size() const;
  private:
  int _internal_attr_level_size() const;
  public:
  void clear_attr_level();
  private:
  uint32_t _internal_attr_level(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      _internal_attr_level() const;
  void _internal_add_attr_level(uint32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      _internal_mutable_attr_level();
  public:
  uint32_t attr_level(int index) const;
  void set_attr_level(int index, uint32_t value);
  void add_attr_level(uint32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
      attr_level() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
      mutable_attr_level();

  // repeated bool attr_can_upgrade = 9;
  int attr_can_upgrade_size() const;
  private:
  int _internal_attr_can_upgrade_size() const;
  public:
  void clear_attr_can_upgrade();
  private:
  bool _internal_attr_can_upgrade(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_attr_can_upgrade() const;
  void _internal_add_attr_can_upgrade(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_attr_can_upgrade();
  public:
  bool attr_can_upgrade(int index) const;
  void set_attr_can_upgrade(int index, bool value);
  void add_attr_can_upgrade(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      attr_can_upgrade() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_attr_can_upgrade();

  // string name = 2;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint32 item_id = 1;
  void clear_item_id();
  uint32_t item_id() const;
  void set_item_id(uint32_t value);
  private:
  uint32_t _internal_item_id() const;
  void _internal_set_item_id(uint32_t value);
  public:

  // uint32 level = 3;
  void clear_level();
  uint32_t level() const;
  void set_level(uint32_t value);
  private:
  uint32_t _internal_level() const;
  void _internal_set_level(uint32_t value);
  public:

  // int64 exp = 4;
  void clear_exp();
  int64_t exp() const;
  void set_exp(int64_t value);
  private:
  int64_t _internal_exp() const;
  void _internal_set_exp(int64_t value);
  public:

  // int64 exp_item = 5;
  void clear_exp_item();
  int64_t exp_item() const;
  void set_exp_item(int64_t value);
  private:
  int64_t _internal_exp_item() const;
  void _internal_set_exp_item(int64_t value);
  public:

  // uint32 skillpower = 10;
  void clear_skillpower();
  uint32_t skillpower() const;
  void set_skillpower(uint32_t value);
  private:
  uint32_t _internal_skillpower() const;
  void _internal_set_skillpower(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:network.TPetAdvancedTable)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::network::TPetAdvancedSkillData > skills_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > attr_type_;
    mutable std::atomic<int> _attr_type_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t > attr_level_;
    mutable std::atomic<int> _attr_level_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > attr_can_upgrade_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    uint32_t item_id_;
    uint32_t level_;
    int64_t exp_;
    int64_t exp_item_;
    uint32_t skillpower_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_data_5fpet_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TPetAdvancedSkillProto

// uint32 apply = 1;
inline void TPetAdvancedSkillProto::clear_apply() {
  _impl_.apply_ = 0u;
}
inline uint32_t TPetAdvancedSkillProto::_internal_apply() const {
  return _impl_.apply_;
}
inline uint32_t TPetAdvancedSkillProto::apply() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedSkillProto.apply)
  return _internal_apply();
}
inline void TPetAdvancedSkillProto::_internal_set_apply(uint32_t value) {
  
  _impl_.apply_ = value;
}
inline void TPetAdvancedSkillProto::set_apply(uint32_t value) {
  _internal_set_apply(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedSkillProto.apply)
}

// string value_expr = 2;
inline void TPetAdvancedSkillProto::clear_value_expr() {
  _impl_.value_expr_.ClearToEmpty();
}
inline const std::string& TPetAdvancedSkillProto::value_expr() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedSkillProto.value_expr)
  return _internal_value_expr();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void TPetAdvancedSkillProto::set_value_expr(ArgT0&& arg0, ArgT... args) {
 
 _impl_.value_expr_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:network.TPetAdvancedSkillProto.value_expr)
}
inline std::string* TPetAdvancedSkillProto::mutable_value_expr() {
  std::string* _s = _internal_mutable_value_expr();
  // @@protoc_insertion_point(field_mutable:network.TPetAdvancedSkillProto.value_expr)
  return _s;
}
inline const std::string& TPetAdvancedSkillProto::_internal_value_expr() const {
  return _impl_.value_expr_.Get();
}
inline void TPetAdvancedSkillProto::_internal_set_value_expr(const std::string& value) {
  
  _impl_.value_expr_.Set(value, GetArenaForAllocation());
}
inline std::string* TPetAdvancedSkillProto::_internal_mutable_value_expr() {
  
  return _impl_.value_expr_.Mutable(GetArenaForAllocation());
}
inline std::string* TPetAdvancedSkillProto::release_value_expr() {
  // @@protoc_insertion_point(field_release:network.TPetAdvancedSkillProto.value_expr)
  return _impl_.value_expr_.Release();
}
inline void TPetAdvancedSkillProto::set_allocated_value_expr(std::string* value_expr) {
  if (value_expr != nullptr) {
    
  } else {
    
  }
  _impl_.value_expr_.SetAllocated(value_expr, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.value_expr_.IsDefault()) {
    _impl_.value_expr_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:network.TPetAdvancedSkillProto.value_expr)
}

// bool is_heroic = 3;
inline void TPetAdvancedSkillProto::clear_is_heroic() {
  _impl_.is_heroic_ = false;
}
inline bool TPetAdvancedSkillProto::_internal_is_heroic() const {
  return _impl_.is_heroic_;
}
inline bool TPetAdvancedSkillProto::is_heroic() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedSkillProto.is_heroic)
  return _internal_is_heroic();
}
inline void TPetAdvancedSkillProto::_internal_set_is_heroic(bool value) {
  
  _impl_.is_heroic_ = value;
}
inline void TPetAdvancedSkillProto::set_is_heroic(bool value) {
  _internal_set_is_heroic(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedSkillProto.is_heroic)
}

// -------------------------------------------------------------------

// TPetAdvancedEvolveProto

// uint32 level = 1;
inline void TPetAdvancedEvolveProto::clear_level() {
  _impl_.level_ = 0u;
}
inline uint32_t TPetAdvancedEvolveProto::_internal_level() const {
  return _impl_.level_;
}
inline uint32_t TPetAdvancedEvolveProto::level() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedEvolveProto.level)
  return _internal_level();
}
inline void TPetAdvancedEvolveProto::_internal_set_level(uint32_t value) {
  
  _impl_.level_ = value;
}
inline void TPetAdvancedEvolveProto::set_level(uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedEvolveProto.level)
}

// string name = 2;
inline void TPetAdvancedEvolveProto::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& TPetAdvancedEvolveProto::name() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedEvolveProto.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void TPetAdvancedEvolveProto::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:network.TPetAdvancedEvolveProto.name)
}
inline std::string* TPetAdvancedEvolveProto::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:network.TPetAdvancedEvolveProto.name)
  return _s;
}
inline const std::string& TPetAdvancedEvolveProto::_internal_name() const {
  return _impl_.name_.Get();
}
inline void TPetAdvancedEvolveProto::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* TPetAdvancedEvolveProto::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* TPetAdvancedEvolveProto::release_name() {
  // @@protoc_insertion_point(field_release:network.TPetAdvancedEvolveProto.name)
  return _impl_.name_.Release();
}
inline void TPetAdvancedEvolveProto::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:network.TPetAdvancedEvolveProto.name)
}

// uint32 refine_id = 3;
inline void TPetAdvancedEvolveProto::clear_refine_id() {
  _impl_.refine_id_ = 0u;
}
inline uint32_t TPetAdvancedEvolveProto::_internal_refine_id() const {
  return _impl_.refine_id_;
}
inline uint32_t TPetAdvancedEvolveProto::refine_id() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedEvolveProto.refine_id)
  return _internal_refine_id();
}
inline void TPetAdvancedEvolveProto::_internal_set_refine_id(uint32_t value) {
  
  _impl_.refine_id_ = value;
}
inline void TPetAdvancedEvolveProto::set_refine_id(uint32_t value) {
  _internal_set_refine_id(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedEvolveProto.refine_id)
}

// float scale = 4;
inline void TPetAdvancedEvolveProto::clear_scale() {
  _impl_.scale_ = 0;
}
inline float TPetAdvancedEvolveProto::_internal_scale() const {
  return _impl_.scale_;
}
inline float TPetAdvancedEvolveProto::scale() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedEvolveProto.scale)
  return _internal_scale();
}
inline void TPetAdvancedEvolveProto::_internal_set_scale(float value) {
  
  _impl_.scale_ = value;
}
inline void TPetAdvancedEvolveProto::set_scale(float value) {
  _internal_set_scale(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedEvolveProto.scale)
}

// uint32 normal_skill_count = 5;
inline void TPetAdvancedEvolveProto::clear_normal_skill_count() {
  _impl_.normal_skill_count_ = 0u;
}
inline uint32_t TPetAdvancedEvolveProto::_internal_normal_skill_count() const {
  return _impl_.normal_skill_count_;
}
inline uint32_t TPetAdvancedEvolveProto::normal_skill_count() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedEvolveProto.normal_skill_count)
  return _internal_normal_skill_count();
}
inline void TPetAdvancedEvolveProto::_internal_set_normal_skill_count(uint32_t value) {
  
  _impl_.normal_skill_count_ = value;
}
inline void TPetAdvancedEvolveProto::set_normal_skill_count(uint32_t value) {
  _internal_set_normal_skill_count(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedEvolveProto.normal_skill_count)
}

// uint32 heroic_skill_count = 6;
inline void TPetAdvancedEvolveProto::clear_heroic_skill_count() {
  _impl_.heroic_skill_count_ = 0u;
}
inline uint32_t TPetAdvancedEvolveProto::_internal_heroic_skill_count() const {
  return _impl_.heroic_skill_count_;
}
inline uint32_t TPetAdvancedEvolveProto::heroic_skill_count() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedEvolveProto.heroic_skill_count)
  return _internal_heroic_skill_count();
}
inline void TPetAdvancedEvolveProto::_internal_set_heroic_skill_count(uint32_t value) {
  
  _impl_.heroic_skill_count_ = value;
}
inline void TPetAdvancedEvolveProto::set_heroic_skill_count(uint32_t value) {
  _internal_set_heroic_skill_count(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedEvolveProto.heroic_skill_count)
}

// uint32 skillpower = 7;
inline void TPetAdvancedEvolveProto::clear_skillpower() {
  _impl_.skillpower_ = 0u;
}
inline uint32_t TPetAdvancedEvolveProto::_internal_skillpower() const {
  return _impl_.skillpower_;
}
inline uint32_t TPetAdvancedEvolveProto::skillpower() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedEvolveProto.skillpower)
  return _internal_skillpower();
}
inline void TPetAdvancedEvolveProto::_internal_set_skillpower(uint32_t value) {
  
  _impl_.skillpower_ = value;
}
inline void TPetAdvancedEvolveProto::set_skillpower(uint32_t value) {
  _internal_set_skillpower(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedEvolveProto.skillpower)
}

// bool skillpower_rerollable = 8;
inline void TPetAdvancedEvolveProto::clear_skillpower_rerollable() {
  _impl_.skillpower_rerollable_ = false;
}
inline bool TPetAdvancedEvolveProto::_internal_skillpower_rerollable() const {
  return _impl_.skillpower_rerollable_;
}
inline bool TPetAdvancedEvolveProto::skillpower_rerollable() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedEvolveProto.skillpower_rerollable)
  return _internal_skillpower_rerollable();
}
inline void TPetAdvancedEvolveProto::_internal_set_skillpower_rerollable(bool value) {
  
  _impl_.skillpower_rerollable_ = value;
}
inline void TPetAdvancedEvolveProto::set_skillpower_rerollable(bool value) {
  _internal_set_skillpower_rerollable(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedEvolveProto.skillpower_rerollable)
}

// -------------------------------------------------------------------

// TPetAdvancedAttrProto

// uint32 apply_level = 1;
inline void TPetAdvancedAttrProto::clear_apply_level() {
  _impl_.apply_level_ = 0u;
}
inline uint32_t TPetAdvancedAttrProto::_internal_apply_level() const {
  return _impl_.apply_level_;
}
inline uint32_t TPetAdvancedAttrProto::apply_level() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedAttrProto.apply_level)
  return _internal_apply_level();
}
inline void TPetAdvancedAttrProto::_internal_set_apply_level(uint32_t value) {
  
  _impl_.apply_level_ = value;
}
inline void TPetAdvancedAttrProto::set_apply_level(uint32_t value) {
  _internal_set_apply_level(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedAttrProto.apply_level)
}

// uint32 apply_type = 2;
inline void TPetAdvancedAttrProto::clear_apply_type() {
  _impl_.apply_type_ = 0u;
}
inline uint32_t TPetAdvancedAttrProto::_internal_apply_type() const {
  return _impl_.apply_type_;
}
inline uint32_t TPetAdvancedAttrProto::apply_type() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedAttrProto.apply_type)
  return _internal_apply_type();
}
inline void TPetAdvancedAttrProto::_internal_set_apply_type(uint32_t value) {
  
  _impl_.apply_type_ = value;
}
inline void TPetAdvancedAttrProto::set_apply_type(uint32_t value) {
  _internal_set_apply_type(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedAttrProto.apply_type)
}

// float value = 3;
inline void TPetAdvancedAttrProto::clear_value() {
  _impl_.value_ = 0;
}
inline float TPetAdvancedAttrProto::_internal_value() const {
  return _impl_.value_;
}
inline float TPetAdvancedAttrProto::value() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedAttrProto.value)
  return _internal_value();
}
inline void TPetAdvancedAttrProto::_internal_set_value(float value) {
  
  _impl_.value_ = value;
}
inline void TPetAdvancedAttrProto::set_value(float value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedAttrProto.value)
}

// uint32 refine_id = 4;
inline void TPetAdvancedAttrProto::clear_refine_id() {
  _impl_.refine_id_ = 0u;
}
inline uint32_t TPetAdvancedAttrProto::_internal_refine_id() const {
  return _impl_.refine_id_;
}
inline uint32_t TPetAdvancedAttrProto::refine_id() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedAttrProto.refine_id)
  return _internal_refine_id();
}
inline void TPetAdvancedAttrProto::_internal_set_refine_id(uint32_t value) {
  
  _impl_.refine_id_ = value;
}
inline void TPetAdvancedAttrProto::set_refine_id(uint32_t value) {
  _internal_set_refine_id(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedAttrProto.refine_id)
}

// uint32 required_pet_level = 5;
inline void TPetAdvancedAttrProto::clear_required_pet_level() {
  _impl_.required_pet_level_ = 0u;
}
inline uint32_t TPetAdvancedAttrProto::_internal_required_pet_level() const {
  return _impl_.required_pet_level_;
}
inline uint32_t TPetAdvancedAttrProto::required_pet_level() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedAttrProto.required_pet_level)
  return _internal_required_pet_level();
}
inline void TPetAdvancedAttrProto::_internal_set_required_pet_level(uint32_t value) {
  
  _impl_.required_pet_level_ = value;
}
inline void TPetAdvancedAttrProto::set_required_pet_level(uint32_t value) {
  _internal_set_required_pet_level(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedAttrProto.required_pet_level)
}

// -------------------------------------------------------------------

// TPetAdvancedSkillData

// uint32 vnum = 1;
inline void TPetAdvancedSkillData::clear_vnum() {
  _impl_.vnum_ = 0u;
}
inline uint32_t TPetAdvancedSkillData::_internal_vnum() const {
  return _impl_.vnum_;
}
inline uint32_t TPetAdvancedSkillData::vnum() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedSkillData.vnum)
  return _internal_vnum();
}
inline void TPetAdvancedSkillData::_internal_set_vnum(uint32_t value) {
  
  _impl_.vnum_ = value;
}
inline void TPetAdvancedSkillData::set_vnum(uint32_t value) {
  _internal_set_vnum(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedSkillData.vnum)
}

// uint32 level = 2;
inline void TPetAdvancedSkillData::clear_level() {
  _impl_.level_ = 0u;
}
inline uint32_t TPetAdvancedSkillData::_internal_level() const {
  return _impl_.level_;
}
inline uint32_t TPetAdvancedSkillData::level() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedSkillData.level)
  return _internal_level();
}
inline void TPetAdvancedSkillData::_internal_set_level(uint32_t value) {
  
  _impl_.level_ = value;
}
inline void TPetAdvancedSkillData::set_level(uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedSkillData.level)
}

// bool changed = 3;
inline void TPetAdvancedSkillData::clear_changed() {
  _impl_.changed_ = false;
}
inline bool TPetAdvancedSkillData::_internal_changed() const {
  return _impl_.changed_;
}
inline bool TPetAdvancedSkillData::changed() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedSkillData.changed)
  return _internal_changed();
}
inline void TPetAdvancedSkillData::_internal_set_changed(bool value) {
  
  _impl_.changed_ = value;
}
inline void TPetAdvancedSkillData::set_changed(bool value) {
  _internal_set_changed(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedSkillData.changed)
}

// -------------------------------------------------------------------

// TPetAdvancedTable

// uint32 item_id = 1;
inline void TPetAdvancedTable::clear_item_id() {
  _impl_.item_id_ = 0u;
}
inline uint32_t TPetAdvancedTable::_internal_item_id() const {
  return _impl_.item_id_;
}
inline uint32_t TPetAdvancedTable::item_id() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedTable.item_id)
  return _internal_item_id();
}
inline void TPetAdvancedTable::_internal_set_item_id(uint32_t value) {
  
  _impl_.item_id_ = value;
}
inline void TPetAdvancedTable::set_item_id(uint32_t value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedTable.item_id)
}

// string name = 2;
inline void TPetAdvancedTable::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& TPetAdvancedTable::name() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedTable.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void TPetAdvancedTable::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:network.TPetAdvancedTable.name)
}
inline std::string* TPetAdvancedTable::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:network.TPetAdvancedTable.name)
  return _s;
}
inline const std::string& TPetAdvancedTable::_internal_name() const {
  return _impl_.name_.Get();
}
inline void TPetAdvancedTable::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* TPetAdvancedTable::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* TPetAdvancedTable::release_name() {
  // @@protoc_insertion_point(field_release:network.TPetAdvancedTable.name)
  return _impl_.name_.Release();
}
inline void TPetAdvancedTable::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:network.TPetAdvancedTable.name)
}

// uint32 level = 3;
inline void TPetAdvancedTable::clear_level() {
  _impl_.level_ = 0u;
}
inline uint32_t TPetAdvancedTable::_internal_level() const {
  return _impl_.level_;
}
inline uint32_t TPetAdvancedTable::level() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedTable.level)
  return _internal_level();
}
inline void TPetAdvancedTable::_internal_set_level(uint32_t value) {
  
  _impl_.level_ = value;
}
inline void TPetAdvancedTable::set_level(uint32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedTable.level)
}

// int64 exp = 4;
inline void TPetAdvancedTable::clear_exp() {
  _impl_.exp_ = int64_t{0};
}
inline int64_t TPetAdvancedTable::_internal_exp() const {
  return _impl_.exp_;
}
inline int64_t TPetAdvancedTable::exp() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedTable.exp)
  return _internal_exp();
}
inline void TPetAdvancedTable::_internal_set_exp(int64_t value) {
  
  _impl_.exp_ = value;
}
inline void TPetAdvancedTable::set_exp(int64_t value) {
  _internal_set_exp(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedTable.exp)
}

// int64 exp_item = 5;
inline void TPetAdvancedTable::clear_exp_item() {
  _impl_.exp_item_ = int64_t{0};
}
inline int64_t TPetAdvancedTable::_internal_exp_item() const {
  return _impl_.exp_item_;
}
inline int64_t TPetAdvancedTable::exp_item() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedTable.exp_item)
  return _internal_exp_item();
}
inline void TPetAdvancedTable::_internal_set_exp_item(int64_t value) {
  
  _impl_.exp_item_ = value;
}
inline void TPetAdvancedTable::set_exp_item(int64_t value) {
  _internal_set_exp_item(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedTable.exp_item)
}

// repeated .network.TPetAdvancedSkillData skills = 6;
inline int TPetAdvancedTable::_internal_skills_size() const {
  return _impl_.skills_.size();
}
inline int TPetAdvancedTable::skills_size() const {
  return _internal_skills_size();
}
inline void TPetAdvancedTable::clear_skills() {
  _impl_.skills_.Clear();
}
inline ::network::TPetAdvancedSkillData* TPetAdvancedTable::mutable_skills(int index) {
  // @@protoc_insertion_point(field_mutable:network.TPetAdvancedTable.skills)
  return _impl_.skills_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::network::TPetAdvancedSkillData >*
TPetAdvancedTable::mutable_skills() {
  // @@protoc_insertion_point(field_mutable_list:network.TPetAdvancedTable.skills)
  return &_impl_.skills_;
}
inline const ::network::TPetAdvancedSkillData& TPetAdvancedTable::_internal_skills(int index) const {
  return _impl_.skills_.Get(index);
}
inline const ::network::TPetAdvancedSkillData& TPetAdvancedTable::skills(int index) const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedTable.skills)
  return _internal_skills(index);
}
inline ::network::TPetAdvancedSkillData* TPetAdvancedTable::_internal_add_skills() {
  return _impl_.skills_.Add();
}
inline ::network::TPetAdvancedSkillData* TPetAdvancedTable::add_skills() {
  ::network::TPetAdvancedSkillData* _add = _internal_add_skills();
  // @@protoc_insertion_point(field_add:network.TPetAdvancedTable.skills)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::network::TPetAdvancedSkillData >&
TPetAdvancedTable::skills() const {
  // @@protoc_insertion_point(field_list:network.TPetAdvancedTable.skills)
  return _impl_.skills_;
}

// repeated uint32 attr_type = 7;
inline int TPetAdvancedTable::_internal_attr_type_size() const {
  return _impl_.attr_type_.size();
}
inline int TPetAdvancedTable::attr_type_size() const {
  return _internal_attr_type_size();
}
inline void TPetAdvancedTable::clear_attr_type() {
  _impl_.attr_type_.Clear();
}
inline uint32_t TPetAdvancedTable::_internal_attr_type(int index) const {
  return _impl_.attr_type_.Get(index);
}
inline uint32_t TPetAdvancedTable::attr_type(int index) const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedTable.attr_type)
  return _internal_attr_type(index);
}
inline void TPetAdvancedTable::set_attr_type(int index, uint32_t value) {
  _impl_.attr_type_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedTable.attr_type)
}
inline void TPetAdvancedTable::_internal_add_attr_type(uint32_t value) {
  _impl_.attr_type_.Add(value);
}
inline void TPetAdvancedTable::add_attr_type(uint32_t value) {
  _internal_add_attr_type(value);
  // @@protoc_insertion_point(field_add:network.TPetAdvancedTable.attr_type)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
TPetAdvancedTable::_internal_attr_type() const {
  return _impl_.attr_type_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
TPetAdvancedTable::attr_type() const {
  // @@protoc_insertion_point(field_list:network.TPetAdvancedTable.attr_type)
  return _internal_attr_type();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
TPetAdvancedTable::_internal_mutable_attr_type() {
  return &_impl_.attr_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
TPetAdvancedTable::mutable_attr_type() {
  // @@protoc_insertion_point(field_mutable_list:network.TPetAdvancedTable.attr_type)
  return _internal_mutable_attr_type();
}

// repeated uint32 attr_level = 8;
inline int TPetAdvancedTable::_internal_attr_level_size() const {
  return _impl_.attr_level_.size();
}
inline int TPetAdvancedTable::attr_level_size() const {
  return _internal_attr_level_size();
}
inline void TPetAdvancedTable::clear_attr_level() {
  _impl_.attr_level_.Clear();
}
inline uint32_t TPetAdvancedTable::_internal_attr_level(int index) const {
  return _impl_.attr_level_.Get(index);
}
inline uint32_t TPetAdvancedTable::attr_level(int index) const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedTable.attr_level)
  return _internal_attr_level(index);
}
inline void TPetAdvancedTable::set_attr_level(int index, uint32_t value) {
  _impl_.attr_level_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedTable.attr_level)
}
inline void TPetAdvancedTable::_internal_add_attr_level(uint32_t value) {
  _impl_.attr_level_.Add(value);
}
inline void TPetAdvancedTable::add_attr_level(uint32_t value) {
  _internal_add_attr_level(value);
  // @@protoc_insertion_point(field_add:network.TPetAdvancedTable.attr_level)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
TPetAdvancedTable::_internal_attr_level() const {
  return _impl_.attr_level_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >&
TPetAdvancedTable::attr_level() const {
  // @@protoc_insertion_point(field_list:network.TPetAdvancedTable.attr_level)
  return _internal_attr_level();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
TPetAdvancedTable::_internal_mutable_attr_level() {
  return &_impl_.attr_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint32_t >*
TPetAdvancedTable::mutable_attr_level() {
  // @@protoc_insertion_point(field_mutable_list:network.TPetAdvancedTable.attr_level)
  return _internal_mutable_attr_level();
}

// repeated bool attr_can_upgrade = 9;
inline int TPetAdvancedTable::_internal_attr_can_upgrade_size() const {
  return _impl_.attr_can_upgrade_.size();
}
inline int TPetAdvancedTable::attr_can_upgrade_size() const {
  return _internal_attr_can_upgrade_size();
}
inline void TPetAdvancedTable::clear_attr_can_upgrade() {
  _impl_.attr_can_upgrade_.Clear();
}
inline bool TPetAdvancedTable::_internal_attr_can_upgrade(int index) const {
  return _impl_.attr_can_upgrade_.Get(index);
}
inline bool TPetAdvancedTable::attr_can_upgrade(int index) const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedTable.attr_can_upgrade)
  return _internal_attr_can_upgrade(index);
}
inline void TPetAdvancedTable::set_attr_can_upgrade(int index, bool value) {
  _impl_.attr_can_upgrade_.Set(index, value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedTable.attr_can_upgrade)
}
inline void TPetAdvancedTable::_internal_add_attr_can_upgrade(bool value) {
  _impl_.attr_can_upgrade_.Add(value);
}
inline void TPetAdvancedTable::add_attr_can_upgrade(bool value) {
  _internal_add_attr_can_upgrade(value);
  // @@protoc_insertion_point(field_add:network.TPetAdvancedTable.attr_can_upgrade)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
TPetAdvancedTable::_internal_attr_can_upgrade() const {
  return _impl_.attr_can_upgrade_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
TPetAdvancedTable::attr_can_upgrade() const {
  // @@protoc_insertion_point(field_list:network.TPetAdvancedTable.attr_can_upgrade)
  return _internal_attr_can_upgrade();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
TPetAdvancedTable::_internal_mutable_attr_can_upgrade() {
  return &_impl_.attr_can_upgrade_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
TPetAdvancedTable::mutable_attr_can_upgrade() {
  // @@protoc_insertion_point(field_mutable_list:network.TPetAdvancedTable.attr_can_upgrade)
  return _internal_mutable_attr_can_upgrade();
}

// uint32 skillpower = 10;
inline void TPetAdvancedTable::clear_skillpower() {
  _impl_.skillpower_ = 0u;
}
inline uint32_t TPetAdvancedTable::_internal_skillpower() const {
  return _impl_.skillpower_;
}
inline uint32_t TPetAdvancedTable::skillpower() const {
  // @@protoc_insertion_point(field_get:network.TPetAdvancedTable.skillpower)
  return _internal_skillpower();
}
inline void TPetAdvancedTable::_internal_set_skillpower(uint32_t value) {
  
  _impl_.skillpower_ = value;
}
inline void TPetAdvancedTable::set_skillpower(uint32_t value) {
  _internal_set_skillpower(value);
  // @@protoc_insertion_point(field_set:network.TPetAdvancedTable.skillpower)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace network

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_data_5fpet_2eproto
